# This is the PDBCS API spec in YAML
# Clients and documentation will be auto-generated from this file.
# Review the API checklist:
# https://confluence.aka.lgl.grungy.us/display/DEX/API+Consistency+Checklist
swagger: '2.0'
x-oracle-package: com.oracle.multitenant
info:
  title: PDBCS API
  description: PDBCS API
  version: "1.0.0"
# the domain of the service
host: 127.0.0.1
# array of all schemes that your API supports
schemes:
  - http
  - https
# will be prefixed to all paths
basePath: /broker/pdbcs/private/v1
paths:
  /token:
    post:
      description: Get a new token or refresh an old token for a user
      summary: User must have at least one role in the database
      operationId: createCommonToken
      consumes: application/json
      produces: application/json
      parameters:
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: token specifications
          required: true
          schema:
            $ref: '#/definitions/AuthTokenSpecification'
      responses:
        200:
          description: Token granted or refreshed
          schema:
            $ref: '#/definitions/AuthToken'
        400:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
  /token/revoke/users/{user_name}:
    post:
      description: Revoke access token of a common user
      summary: Existing granted token is still valid until next Refresh.
      operationId: revokeCommonUserAuth
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Token access is revoked.
          type: string
        400:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
  /token/revoke/users:
    get:
      description: Get all the revoked common users
      operationId: getCommonUserAuth
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          type: string
        400:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
  /token/jwks:
    get:
      description: Returns the JSON Web Key Set for validating the token contents
      operationId: getJsonWebKeySet
      produces: application/json
      parameters:
        - name: Request-Id
          in: header
          required: false
          type: string
      responses:
        200:
          description: successful operation
          type: string
        404:
          description: token public key not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /jobs:
    post:
      description: Creates a new job using the given spec
      summary: Creates a new job using the given spec
      operationId: createJob
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: job specification
          required: true
          schema:
            $ref: '#/definitions/JobSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Get jobs.
      operationId: getJobs
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: type
          in: query
          description: job type
          required: false
          type: string
        - name: status
          in: query
          description: job status
          required: false
          type: string
        - name: tenant_name
          in: query
          description: tenant name
          required: false
          type: string
        - name: database_name
          in: query
          description: database name
          required: false
          type: string
        - name: group_id
          in: query
          description: group id
          required: false
          type: string
        - name: request_id
          in: query
          description: target request id
          required: false
          type: string
        - name: interval
          in: query
          description: interval in seconds
          required: false
          type: integer
          format: int32
        - name: queued_only
          in: query
          description: queued job only
          required: false
          type: boolean
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        404:
          description: DB healthcheck error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /jobs/{id}:
    get:
      description: Get details of a particular Job
      summary: Terminal job status is indicated by the isEnded tag of the Job response
      operationId: getJob
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of job
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Job'
        404:
          description: Job not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /external_applications:
    get:
      description: Gets all the provisioned external applications
      operationId: getAllExternalApplications
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ExternalApplication'
    post:
      description: Provisions an external application
      operationId: createExternalApplication
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: External Application Specification
          required: true
          schema:
            type: object
            items:
              $ref: '#/definitions/ProvisionExternalApplicationSpecification'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Job'
        404:
          description: Job not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /external_applications/{name}:
    get:
      description: Gets the external application with the given name
      operationId: getExternalApplication
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the external application
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/ExternalApplication'
        404:
          description: external application not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Un-provisions the external application with the given name
      operationId: deleteExternalApplication
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the external application
          required: true
          type: string
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Updates the external application with the given name
      operationId: updateExternalApplication
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the external application
          required: true
          type: string
        - in: body
          name: body
          description: details of external application attributes to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateExternalApplicationSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /external_applications/{name}/setting:
    get:
      description: Gets the setting of the external application with the given name
      operationId: getExternalApplicationSetting
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the external application
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        404:
          description: external application not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /external_applications/{name}/databases:
    post:
      description: Updates all tenant databases external application settings
      operationId: updateExternalApplicationAllDatabases
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the external application
          required: true
          type: string
        - in: body
          name: body
          description: details of external application attributes to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateTenantDatabaseExternalApplicationSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'

  /external_applications/{name}/acls/accesses:
    post:
      description: Check access of a vcn_ocid, vcn_id or ip address against a tenant database ACLs
      operationId: checkExternalApplicationAclAccesses
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the external application
          required: true
          type: string
        - in: body
          name: body
          description: details of external application attributes to be updated
          required: true
          schema:
            $ref: '#/definitions/ExternalApplicationAclAccessCheckSpecification'
      responses:
        200:
          description: Job success
          schema:
            $ref: '#/definitions/ExternalApplicationAclAccessCheckResponse'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'

  /external_applications/{application_name}/urls:
    get:
      description: Get tenant name and database name according to external application name and custom url.
      operationId: getTenantDatabase
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: application_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        404:
          description: tenant database not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /jobs/{id}/stop:
    post:
      description: Stops a scheduled job
      operationId: stopJob
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of job
          required: true
          type: string
      responses:
       200:
          description: successful operation
          type: string
       404:
          description: Job not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /jobs/{id}/kill:
    post:
      description: Kills a job
      operationId: killJob
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of job
          required: true
          type: string
        - name: body
          in: body
          description: killing a job
          required: true
          schema:
            $ref: '#/definitions/KillJobSpecification'
      responses:
       202:
          description: Job for killing a job is created
          schema:
            $ref: '#/definitions/Job'
       404:
          description: Job not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /patches:
    post:
      description: Initiates a patch
      operationId: beginPatch
      comsumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: BeginPatchBody
          in: body
          schema:
            type: object
            required:
              - name
              - type
              - pod_id
              - planned
            properties:
              name:
                type: string
                description: patch name
              type:
                type: string
                description: patch type
              pod_id:
                type: integer
                description: the id of the pod to which the pod is applied
              planned:
                type: boolean
                description: true if the applied patch follows maintenance schedule
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Patch'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /patches/{patch_id}:
    get:
      description: Gets a patch
      operationId: getPatch
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: patch_id
          in: path
          description: patch id
          required: true
          type: string
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Patch'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Updates patch metadata
      operationId: updatePatch
      comsumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: patch_id
          in: path
          description: patch id
          required: true
          type: string
        - name: UpdatePatchBody
          in: body
          schema:
            type: object
            required:
              - status
            properties:
              status:
                type: string
                enum: [ABORTED, FAILURE, SUCCESS]
                description: patch status
      responses:
        204:
          description: No Content
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        404:
          description: Not Found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants:
    get:
      description: Gets all the provisioned tenants
      operationId: getAllTenants
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tenant'
        404:
          description: tenants not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Provisions a new tenant, Tenant name must be unique. Max name length is 256
      summary: Max tenant name length is 256 characters
      operationId: createTenant
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: details of tenant to be provisioned
          required: true
          schema:
            $ref: '#/definitions/ProvisionTenantSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}:
    get:
      description: Gets the given named tenant
      operationId: getTenant
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Tenant'
        404:
          description: tenant not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Un-provisions the given named tenant
      operationId: deleteTenant
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Updates the given named tenant
      operationId: updateTenant
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: details of tenant attributes to be updated
          required: true
          schema:
            $ref: '#/definitions/UpdateTenantSpecification'
      responses:
        200:
          description: update tenant job result
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases:
    get:
      description: Gets all the provisioned tenant database for a given tenant
      operationId: getTenantDatabases
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
        - name: service_type
          in: query
          description: service type of the databases
          required: false
          type: string
          enum:
            - ATP
            - ADW
            - AJD
            - APEX
        - name: database_version
          in: query
          required: false
          type: string
        - name: preview
          in: query
          required: false
          type: boolean
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TenantDatabase'
        404:
          description: database not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Provisions a new tenant database under the given tenant
      summary: Max database name length is 14. Database name can only contain letters and numbers. Password must be between 12 and 60 characters long, and must contain at least one uppercase, one lowercase and one numeric character. It cannot contain the double quote symbol.
      operationId: createTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_principal
          in: header
          type: string
          description: User principal for OBO token
        - name: name
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: details of tenant database to be provisioned
          required: true
          schema:
            $ref: '#/definitions/ProvisionTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided or unable to provision desired system
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenant_database_resource_types:
    get:
      description: List all tenant database resource type
      summary: list all tenant database resource type which can be filter
      operationId: listTenantDatabaseResourceTypes
      consumes: application/json
      produces: application/json
      parameters:
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: resource_type_id
          in: query
          description: filter by resource type id
          required: false
          type: string
        - name: tenant_id
          in: query
          description: filter by tenant id
          required: false
          type: string
        - name: database_id
          in: query
          description: filter by database id
          required: false
          type: string
      responses:
        200:
          description: successful operation
          type: string
        400:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
    post:
      description: Create a new tenant database resource type
      summary: create a new tenant database resource type
      operationId: createTenantDatabaseResourceType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: resource_type_id
          in: query
          description: filter by resource type id
          required: false
          type: string
        - name: tenant_id
          in: query
          description: filter by tenant id
          required: false
          type: string
        - name: database_id
          in: query
          description: filter by database id
          required: false
          type: string
        - in: body
          name: body
          description: tenant database resource type
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseResourceType'
      responses:
        200:
          description: successful operation
          type: string
        400:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
    put:
      description: update a tenant database resource type
      summary: update a tenant database resource type
      operationId: updateTenantDatabaseResourceType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: resource_type_id
          in: query
          description: filter by resource type id
          required: false
          type: string
        - name: tenant_id
          in: query
          description: filter by tenant id
          required: false
          type: string
        - name: database_id
          in: query
          description: filter by database id
          required: false
          type: string
        - in: body
          name: body
          description: tenant database resource type
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseResourceType'
      responses:
        200:
          description: successful operation
          type: string
        400:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
    delete:
      description: Delete a tenant database resource type
      summary: delete a tenant database resource type
      operationId: createTenantDatabaseResourceType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: resource_type_id
          in: query
          description: filter by resource type id
          required: false
          type: string
        - name: tenant_id
          in: query
          description: filter by tenant id
          required: false
          type: string
        - name: database_id
          in: query
          description: filter by database id
          required: false
          type: string
      responses:
        200:
          description: successful operation
          type: string
        400:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
  /tenants/{tenant_name}/databases/{database_name}/credentials:
    get:
      description: get pdb credential
      operationId: getPdbCredential
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: credential_owner
          in: query
          description: owner of the credential
          required: true
          type: string
        - name: credential_name
          in: query
          description: name of the credential
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/PdbCredential'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/ErrorRequestResponse'
  /tenants/{tenant_name}/databases/{database_name}/wallet:
    post:
      description: download tenant wallet
      operationId: downloadTenantWallet
      consumes: application/json
      produces: application/octet_stream
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: create a wallet
          required: true
          schema:
            $ref: '#/definitions/CreateTenantWalletSpecification'
      responses:
        201:
          description: successful operation
          type: string
          format: binary
        401:
          description: Unauthorized
          type: string
  /tenants/{name}/databases/{database_name}:
    get:
      description: Gets the given named tenant database
      operationId: getTenantDatabase
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: autoscaled_cpu_start_time
          in: query
          description: start time for autoscale cpu
          required: false
          type: string
        - name: autoscaled_cpu_end_time
          in: query
          description: end time for autoscale cpu
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TenantDatabase'
        404:
          description: database not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Un-provisions the given named tenant database
      operationId: deleteTenantDatabase
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_principal
          in: header
          type: string
          description: User principal for OBO token
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Unprovision tenant database request specifications
          required: false
          schema:
            $ref: '#/definitions/UnprovisionTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: update properties of the specified tenant database
      operationId: updateTenantDatabase
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_principal
          in: header
          type: string
          description: User principal for OBO token
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Update tenant database request specifications
          required: false
          schema:
            $ref: '#/definitions/UpdateTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
  /tenants/{name}/databases/{database_name}/clones:
    get:
      description: Gets all Refreshable clones tenant databases for given Primary database.
      operationId: getAllRefreshableClones
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: type
          in: query
          description: type of the clone
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TenantDatabase'
        400:
          description: Invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /clone_links/tenants/{name}/databases/{database_name}:
    get:
      description: Gets all Refreshable clones tenant databases for given Primary database.
      operationId: getAllRefreshableClones
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: type
          in: query
          description: type of the clone
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TenantDatabase'
        400:
          description: Invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/ea_clones:
    delete:
      description: Un-provisions EA clone for the given named tenant database
      operationId: deleteTenantDatabaseEaClone
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_principal
          in: header
          type: string
          description: User principal for OBO token
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Unprovision tenant database request specifications
          required: false
          schema:
            $ref: '#/definitions/UnprovisionTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/check_backup_prerequisite:
    get:
      description: Gets the given named tenant database
      operationId: getTenantDatabase
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CheckBackupPrereqResponse'
  /tenants/{name}/databases/{database_name}/external_applications/{app_name}:
    get:
      description: Gets the tenant database metadata for given ext. application
      operationId: getTenantDatabaseExternalApplicationApi
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: app_name
          in: path
          description: name of the external application
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Un-provisions the external application with the given name in pdb
      operationId: deleteTenantDatabaseExternalApplication
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: app_name
          in: path
          description: name of the external application
          required: true
          type: string
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/external_applications/{app_name}:
    post:
      description: Updates ext. application settings for specified tenant
      operationId: updateTenantExternalApplicationApi
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: app_name
          in: path
          description: name of the external application
          required: true
          type: string
        - in: body
          name: body
          description: specifications
          required: true
          schema:
            $ref: '#/definitions/TenantExternalApplicationSpecification'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/backup:
    get:
      description: Get all successful backups for the given tenant database
      summary: All times are in UTC
      operationId: getTenantDatabaseBackups
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: start_date
          in: query
          description: from date of backup (inclusive)
          required: false
          type: string
        - name: end_date
          in: query
          description: to date of backup (non-inclusive)
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TenantDatabaseBackupList'
        400:
          description: invalid params or payload provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Backup a tenant database
      summary: time for job to finish depends on network speed and data size
      operationId: backupTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: backup specifications
          required: false
          schema:
            $ref: '#/definitions/ComposedBackupTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/restore:
    post:
      description: Restore an existing tenant database
      summary: restore_time_str is milisecond since Epoch 1970 UTC, and restore_time_str follows the ISO-8601 UTC instant format ex 2017-08-17T23:10:01Z.
      operationId: restoreTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: restore specifications
          required: true
          schema:
            $ref: '#/definitions/ComposedRestoreTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/restore_plans:
    post:
      description: Create a restore plan for an existing tenant database
      operationId: restorePlanTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: restore specifications
          required: true
          schema:
            $ref: '#/definitions/JobSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/close:
    post:
      description: Closes a tenant database
      operationId: closeTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Close tenant database request specification
          required: false
          schema:
            $ref: '#/definitions/CloseTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/open:
    post:
      description: Opens a tenant database
      operationId: openTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Open tenant database request specification
          required: false
          schema:
            $ref: '#/definitions/OpenTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/change_admin_passwd:
    post:
      description: Change admin password for a tenant database
      summary: password restriction is the same as POST database
      operationId: changeTenantDatabaseAdminPasswd
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: change tenant database admin password specification
          required: true
          schema:
            $ref: '#/definitions/ChangeAdminPasswdSpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/users/{user_name}/passwords:
    post:
      description: Change user password for a tenant database
      summary: password restriction is the same as POST database
      operationId: changePasswd
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: user_name
          in: path
          description: name of the user
          required: true
          type: string
        - in: body
          name: body
          description: change tenant database user password specification
          required: true
          schema:
            $ref: '#/definitions/ChangePasswdSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        500:
          description: encryption failed
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pod_apis/settings:
    post:
      description: Creates new Pod API settings
      summary: Creates new Pod API settings
      operationId: createPodAPISettings
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: Create Pod API settings specification
          required: true
          schema:
            $ref: '#/definitions/CreatePodAPISettingsSpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets all Pod API settings
      operationId: getAllPodAPISettings
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_api
          in: query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        404:
          description: settings not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pod_apis/settings/{pod_api_id}:
    post:
      description: Update Pod API settings
      summary: Updates Pod API settings of specified pod_api_id
      operationId: updatePodAPISettings
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_api_id
          in: path
          description: pod api id
          required: true
          type: int
        - in: body
          name: body
          description: Update Pod API settings specification
          required: true
          schema:
            $ref: '#/definitions/UpdatePodAPISettingsSpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets Pod API settings
      operationId: getPodAPISettings
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_api_id
          in: path
          description: pod api id
          required: true
          type: int
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        404:
          description: settings not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /databases/{guid}:
    get:
      description: Gets the tenant database corresponding to the guid provided
      operationId: getDatabaseByGuid
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: guid
          in: path
          description: guid of the tenant database
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TenantDatabase'
        404:
          description: database not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/disabled_capabilities:
    get:
      description: get all disabled capabilities of an existing tenant database
      summary: get all disabled capabilities of an existing tenant database.
      operationId: getDisabledCapabilities
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    put:
      description: replace disabled capabilities of an existing tenant database
      summary: replace disabled capabilities of an existing tenant database.
      operationId: replaceDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: replace disabled capabilities of an existing tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: add disabled capabilities to an existing tenant database
      summary: add disabled capabilities to an existing tenant database.
      operationId: addDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: add disabled capabilities to an existing tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: delete disabled capabilities from an existing tenant database
      summary: delete disabled capabilities from an existing tenant database.
      operationId: deleteDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: delete disabled capabilities from an existing tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/disabled_capabilities:
    get:
      description: get all disabled capabilities of an existing tenant
      summary: get all disabled capabilities of an existing tenant.
      operationId: getDisabledCapabilities
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    put:
      description: replace disabled capabilities of an existing tenant
      summary: replace disabled capabilities of an existing tenant.
      operationId: replaceDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: replace disabled capabilities of an existing tenant
          required: true
          schema:
            $ref: '#/definitions/TenantDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: add disabled capabilities to an existing tenant
      summary: add disabled capabilities to an existing tenant.
      operationId: addDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: add disabled capabilities to an existing tenant
          required: true
          schema:
            $ref: '#/definitions/TenantDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: delete disabled capabilities from an existing tenant
      summary: delete disabled capabilities from an existing tenant.
      operationId: removeDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: delete disabled capabilities from an existing tenant
          required: true
          schema:
            $ref: '#/definitions/TenantDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/disabled_capabilities:
    get:
      description: get all disabled capabilities of an existing pod
      summary: get all disabled capabilities of an existing pod.
      operationId: getDisabledCapabilities
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: pod id
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    put:
      description: replace disabled capabilities of an existing pod
      summary: replace disabled capabilities of an existing pod.
      operationId: replaceDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: pod id
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: replace disabled capabilities of an existing pod
          required: true
          schema:
            $ref: '#/definitions/PodDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: add disabled capabilities to an existing pod
      summary: add disabled capabilities to an existing pod.
      operationId: addDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: pod id
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: add disabled capabilities to an existing pod
          required: true
          schema:
            $ref: '#/definitions/PodDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: delete disabled capabilities from an existing pod
      summary: delete disabled capabilities from an existing pod.
      operationId: removeDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: pod id
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: delete disabled capabilities from an existing pod
          required: true
          schema:
            $ref: '#/definitions/PodDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/disabled_capabilities:
    post:
      description: add disabled capabilities to all tenant databases
      summary: add disabled capabilities to all tenant databases.
      operationId: addAllTenantDatabaseDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: add disabled capabilities to all tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: delete disabled capabilities from all tenant databases
      summary: delete disabled capabilities from all tenant databases
      operationId: deleteAllTenantDatabaseDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: delete disabled capabilities from all tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/databases/disabled_capabilities:
    post:
      description: add disabled apabilities to all pod databases
      summary: add disabled capabilities to all pod databases.
      operationId: addAllTenantDatabaseDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: pod id
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: add disabled capabilities to pod tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: delete disabled capabilities from pod tenant databases
      summary: delete disabled capabilities from pod tenant databases
      operationId: deleteAllTenantDatabaseDisabledCapabilities
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: pod id
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: delete disabled capabilities from pod tenant databases
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseDisabledCapabilitySpecification'
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/relocate:
    post:
      description: Relocates an existing tenant database
      summary: max_size is in GB. max_size and cpu_count are optional, an empty string or not presence shall mean the original pdb cpu_count and max_size shall be used. tenant name and database name in json payload is optional, but they must match the one in the URL if provided
      operationId: relocateDB
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: relocate an existing tenant database
          required: true
          schema:
            $ref: '#/definitions/RelocateTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/refresh:
    post:
      description: Refresh an existing tenant database
      summary: Refresh an existing tenant database. data_refresh_time_str is milisecond since Epoch 1970 UTC, and data_refresh_time_str follows the ISO-8601 UTC instant format ex 2017-08-17T23:10:01Z.
      operationId: refreshDB
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: refresh an existing tenant database
          required: true
          schema:
            $ref: '#/definitions/RefreshTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/logs/configurations:
    post:
      description: Set logging configuration for all database under a tenant.
      summary: Set logging config for all pods where the specified tenant is present.
      operationId: setTenantLogs
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: Set logging config for all pods under a tenant
          required: true
          schema:
            $ref: '#/definitions/SetLoggingSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/wallets:
    delete:
      description: Remove pre-generated wallets of all tenants.
      summary: Remove pre-generated wallets of all tenants.
      operationId: deleteAllTenantWallet
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Success
        400:
          description: Failure
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{tenant_name}/databases/{database_name}/wallets:
    post:
      description: download pdb wallet
      operationId: downloadPdbWallet
      consumes: application/json
      produces: application/octet_stream
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: download PDB wallet
          required: true
          schema:
            $ref: '#/definitions/CreateWalletSpecification'
      responses:
        201:
          description: successful downloaded
          schema:
            type: string
            format: binary
        401:
          description: Unauthorized
          type: string
  /tenants/{name}/databases/{database_name}/logs/configurations:
    post:
      description: Set logging configuration for a tenant database.
      summary: Set logging config for a given tenant database.
      operationId: setDBLogs
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Set logging configuration for a tenant database.
          required: true
          schema:
            $ref: '#/definitions/SetLoggingSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/acls:
    get:
      description: Gets the ACL of given tenant database
      operationId: getAclTenantDatabase
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: vcn_id
          in: query
          description: VCN id to check for ACL validation
          required: false
          type: integer
          format: int64
        - name: vcn_ocid
          in: query
          description: VCN ocid to check for ACL validation
          required: false
          type: string
        - name: ip
          in: query
          description: IP address to check if in ACLs
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/TenantDatabaseAcl'
    put:
      description: Sets up one or more access control entry to ACL of tenant database
      operationId: setAclTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Sets up one more access control entry to ACL of tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseAcl'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Adds one or more access control entry to ACL of tenant database
      operationId: addAclTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Adds one more access control entry to ACL of tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabaseAcl'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Removes one or more access control entry from ACL of tenant database.
      operationId: removeAclTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
      - name: Authorization
        in: header
        required: true
        type: string
      - name: Request-Id
        in: header
        required: true
        type: string
      - name: name
        in: path
        description: name of the tenant
        required: true
        type: string
      - name: database_name
        in: path
        description: name of the database
        required: true
        type: string
      - in: body
        name: body
        description: Removes one more access control entry from ACL of tenant database.
        required: false
        schema:
          $ref: '#/definitions/TenantDatabaseAcl'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'

  /tenants/{tenant_name}/databases/{database_name}/private_endpoints:
    post:
      description: add private endpoint to existing database
      operationId: postTenantDatabasePrivateEndpoint
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_principal
          in: header
          type: string
          description: User principal for OBO token
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: payload for update PE tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabasePrivateEndpointSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: parameters validation errors during validation/preprocess
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: unauthorized request to create private endpoint
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        500:
          description: internal server error encountered during validation/preprocess
          schema:
            $ref: '#/definitions/SimpleRequestResponse'

    put:
      description: update private endpoint in existing PE database
      operationId: updateTenantDatabasePrivateEndpoint
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_principal
          in: header
          type: string
          description: User principal for OBO token
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: payload for update PE tenant database
          required: true
          schema:
            $ref: '#/definitions/TenantDatabasePrivateEndpointSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: parameters validation errors during validation/preprocess
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: unauthorized request to update private endpoint
          schema:
            $ref: '#/definitions/SimpleRequestResponse'

    delete:
      description: remove private endpoint from existing PE database
      operationId: deleteTenantDatabasePrivateEndpoint
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: user_principal
          in: header
          type: string
          description: User principal for OBO token
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: payload for update PE tenant database
          required: false
          schema:
            $ref: '#/definitions/TenantDatabasePrivateEndpointSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: parameters validation errors during validation/preprocess
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: unauthorized request to delete private endpoint
          schema:
            $ref: '#/definitions/SimpleRequestResponse'

  /tenants/{name}/enable:
    post:
      description: Enable a specified tenant.
      summary: Enable a specified tenant.
      operationId: enableTenant
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/disable:
    post:
      description: Disable a specified tenant.
      summary: Disable a specified tenant.
      operationId: disableTenant
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
      responses:
        200:
          description: Success
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{pod_id}/sessions/activity:
    get:
      description: Returns a small count sessions by activity type.
      operationId: getSessionsActivity
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/sessions/activity/latest:
    get:
      description: Returns a small count latest sessions by activity type.
      operationId: getLatestSessionsActivity
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/monitored:
    get:
      description: returns a small report on monitored sql statements
      operationId: getMonitoredStatement
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
        - name: orderBy
          in: query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/{sql_id},{sql_exec_id},{sql_exec_start}/report:
    get:
      description: returns a detailed report on parallelism of a sql statement
      operationId: getSQLStatement
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: sql_id
          in: path
          description: id of the sql statement
          required: true
          type: string
        - name: sql_exec_id
          in: path
          description: execution id of the sql statement
          required: true
          type: integer
          format: int32
        - name: sql_exec_start
          in: path
          description: sql execution start time
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/{sql_id},{sql_exec_id},{sql_exec_start}/xmlreport:
    get:
      description: returns a detailed report on parallelism of a sql statement
      operationId: getXMLSQLStatement
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: sql_id
          in: path
          description: id of the sql statement
          required: true
          type: string
        - name: sql_exec_id
          in: path
          description: execution id of the sql statement
          required: true
          type: integer
          format: int32
        - name: sql_exec_start
          in: path
          description: sql execution start time
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/{sql_id},{sql_exec_id},{sql_exec_start}/jsonreport:
    get:
      description: returns a detailed report on parallelism of a sql statement
      operationId: getJsonSQLStatement
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: sql_id
          in: path
          description: id of the sql statement
          required: true
          type: string
        - name: sql_exec_id
          in: path
          description: execution id of the sql statement
          required: true
          type: integer
          format: int32
        - name: sql_exec_start
          in: path
          description: sql execution start time
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/current:
    get:
      description: returns a small Current sql statements by consumer group.
      operationId: getCurrentSqlStatement
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/current/latest:
    get:
      description: returns a small latest current sql statements by consumer group.
      operationId: getLatestCurrentSqlStatement
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/queued:
    get:
      description: display the average count of queued parallel statements
      operationId: getQueuedSQLStatements
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/queued/latest:
    get:
      description: display the average count of queued parallel statements
      operationId: getLatestQueuedSQLStatements
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/response_time:
    get:
      description: display the average response time for a transaction
      summary: Statements Response time displays the average response time for a transaction within a time window.
      operationId: getAvgResponseTime
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/utilization/cpu:
    get:
      description: displays the average cpu utilization of a consumer group.
      summary: utilization cpu displays the average cpu utilization of a consumer group within a time window.
      operationId: getCpuUtilization
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: string
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/utilization/cpu/latest:
    get:
      description: displays the latest average cpu utilization of a consumer group.
      summary: latest utilization cpu displays the average cpu utilization of a consumer group within a time window.
      operationId: getLatestCpuUtilization
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: string
        - name: start_time
          in: query
          description: the beginning time of query
          required: false
          type: string
        - name: end_time
          in: query
          description: the end time of query
          required: false
          type: string
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/utilization/storage:
    get:
      description: returns a small report of the current storage utilizations
      operationId: getStorageUtilization
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/metadata/range:
    get:
      description: returns a data range of the chosen data
      operationId: getDataRange
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/metadata/range/latest:
    get:
      description: returns a data range of the chosen data
      operationId: getLatestDataRange
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: offset
          in: query
          description: the number of data points to be offset of the query
          required: false
          type: integer
          format: int32
        - name: limit
          in: query
          description: the maximum number of data points for the query
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/resource_management/rules:
    get:
      description: Get the resource management rules
      summary: Get the resource management rules on limits based on the consumer groups.
      operationId: getResrMgmtnRules
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: databaseName
          in: path
          description: name of the database
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
    post:
      description: set the resource management rules
      summary: set the resource management rules on limits based on the consumer groups.
      operationId: setResrMgmtnRules
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: set ResourceManagementRules
          required: true
          schema:
            $ref: '#/definitions/SetResourceManagementRulesSpecification'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /pods/{pod_id}/statements/cancel:
    post:
      description: Cancel a currently executing sql statement
      summary: Cancel a currently executing sql statement by using the session_id (sid), and session serial number.
      operationId: CancelSQLStatement
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          description: Cancel executing SQL Statement
          required: true
          schema:
            $ref: '#/definitions/CancelSqlStatementSpecification'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/DataSetResult'
  /healthcheck:
    get:
      description: Get Basic Health Check
      summary: Checks if the PDBCS service is up and running and returns a json
      operationId: getJsonHello
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          type: string
  /healthcheck/db:
    get:
      description: Get Basic Database Health Check
      summary: Checks if the central CDB Database can be connected.
      operationId: queryDBTest
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          type: string
        404:
          description: DB healthcheck error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /dcns:
    get:
      description: Get DCN registration status
      operationId: getDcnStatus
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DCNStatus'
  /dcns:
    delete:
      description: Request to unregister DCN
      operationId: unregisterDcn
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /dcns/properties:
    get:
      description: Get DCN enabled properties
      operationId: getDcnEnabledProperties
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Enable DCN for given properties
      operationId: enableDcn
      consumes: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: property names
          required: true
          schema:
            $ref: '#/definitions/DcnPropertyList'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Disable DCN for given properties
      operationId: disableDcn
      consumes: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: property names
          required: true
          schema:
            $ref: '#/definitions/DcnPropertyList'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /jobs/concurrent_types:
    get:
      description: To get concurrent job types.
      operationId: getConcurrentJobTypes
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: type
          in: query
          description: job type
          required: false
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ConcurrentTypeMapper'
        400:
          description: Job type is not defined or Not a database job type
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        404:
          description: Concurrent job type(s) not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: add concurrent job type.
      operationId: addConcurrentJobType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: job type
          required: true
          schema:
            $ref: '#/definitions/ConcurrentTypeMapper'
      responses:
        202:
          description: Successful Operation
        400:
          description: Job type is not defined or Not a database job type
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: delete concurrent job type
      operationId: deleteConcurrentJobType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: job type
          required: true
          schema:
            $ref: '#/definitions/ConcurrentTypeMapper'
      responses:
        200:
          description: Successful Operation
        400:
          description: Job type is not defined or Not a database job type
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /jobs/capability_independent_types:
    get:
      description: To get capability independent job types.
      operationId: getIndependentJobTypes
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
              $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: To add capability independent job type.
      operationId: addIndependentJobType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: job type
          required: true
          schema:
            $ref: '#/definitions/ConcurrentTypeMapper'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: Job type is not defined or Not a database job type
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: To delete capability independent job type.
      operationId: deleteIndependentJobType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: job type
          required: true
          schema:
            $ref: '#/definitions/ConcurrentTypeMapper'
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /jobs/descriptions:
    get:
      description: Descriptions of all the supported job types.
      operationId: describeJobs
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: type_id
          in: query
          description: type id
          required: false
          type: string
        - name: type_name
          in: query
          description: type name
          required: false
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/JobType'
        400:
          description: No Job is found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /logs/{requestId}/pod/{id}:
    get:
      description: Gets a particular POD's request logs.
      summary: Takes in no parameter. Returns request logs of the specified pod.
      operationId: getPodLogFromRequestIdAndPodId
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of pod whose log to retrieve
          required: true
          type: integer
          format: int32
        - name: requestId
          in: path
          description: Request ID whose log to retrieve
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudLogger'
        404:
          description: No logs found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /logs/{requestId}:
    get:
      description: Gets POD request logs for a particular requestId
      summary: Takes in no parameter. Returns request logs of the specified request ID.
      operationId: getPodLogFromRequestId
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: requestId
          in: path
          description: Request ID whose log to retrieve
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudLogger'
        404:
          description: No logs found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /logs:
    get:
      description: Gets POD request logs for a particular requestId
      summary: Takes in no parameter. Returns request logs of the specified request ID or jobId.
      operationId: getPodLogsFromRequestIdAndJobId
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: requestIdLog
          in: query
          description: Request ID whose log to retrieve
          required: false
          type: string
        - name: jobIdLog
          in: query
          description: JobID whose requestId logs to retrieve
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudLogger'
        404:
          description: No logs found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: bad request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /logs/clusters/{name}:
    head:
      description: Gets a particular cluster resource operation logs metadata
      summary: Takes in no parameter. Returns log files metadata of all the resource operations associated with this cluster
      operationId: getResourceOperationLogFileNames
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: Cluster name
          required: true
          type: string
        - name: job_id
          in: query
          description: job_id of the cluster operation
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudLogger'
        404:
          description: No logs found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets a particular cluster resource operation logs contents
      summary: Takes in no parameter. Returns contents of log files of all the resource operations associated with this cluster
      operationId: getResourceOperationLogFileNames
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: Cluster name
          required: true
          type: string
        - name: job_id
          in: query
          description: job_id of the cluster operation
          required: false
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CloudLogger'
        404:
          description: No logs found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{name}/databases/{database_name}:
    post:
      description: Sets up Oracle Machine Learning for the given tenant/database pair
      summary: Tenant and database names in json payload is optional, but it must match the one in the URL if provided.
      operationId: provisionOml
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: tenant name
          required: true
          type: string
        - name: database_name
          in: path
          description: database name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OmlProvisionSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      decription: Cleans the Oracle Machine Learning installation for the given tenant/database pair.
      summary: Tenant and database names in json payload is optional, but it must match the one in the URL if provided.
      operationId: unprovisionOml
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: tenant name
          required: true
          type: string
        - name: database_name
          in: path
          description: database name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OmlUnprovisionSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{tenant_name}/databases/{database_name}/query:
    post:
      description: Executes a select query against the OML repository.
      summary: Return a Json with the result of the select query.
      operationId: executeSelect
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: tenant name
          required: true
          type: string
        - name: database_name
          in: path
          description: database name
          required: true
          type: string
        - in: body
          name: payload
          description: SQL to be executed.
          required: true
          schema:
            $ref: '#/definitions/OmlAccess'
      responses:
        200:
          description: Database is accessed.
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{tenant_name}/databases/{database_name}/update:
    post:
      description: Executes an insert/update/delete query against the OML repository.
      summary: Return the number of affected rows
      operationId: executeUpdate
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: tenant name
          required: true
          type: string
        - name: database_name
          in: path
          description: database name
          required: true
          type: string
        - in: body
          name: payload
          description: SQL to be executed.
          required: true
          schema:
            $ref: '#/definitions/OmlAccess'
      responses:
        200:
          description: Database is accessed.
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{tenant_name}/databases/{database_name}/replace_wallet:
    post:
      description: Recreates the tenant wallet used for OML connection to the database.
      operationId: refreshWallet
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: tenant name
          required: true
          type: string
        - name: database_name
          in: path
          description: database name
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OmlReplaceWalletSpecification'
      responses:
        202:
          description: Successful Operation.
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /healthcheck/pods/:
    post:
      description: Perform Health check on all pods.
      operationId: podBasicHealthCheckReport
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: basic_report
          in: query
          description: basic report or not
          required: false
          type: boolean
        - name: exclude_pdbs
          in: query
          description: whether to exclude PDBs
          required: false
          type: boolean
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /healthcheck/pods/{pod_id}:
    post:
      description: Perform Health check for one specified pod.
      operationId: podSingleDetailedHealthCheckReport
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: pod_id
          in: path
          description: id number of pod
          required: true
          type: integer
          format: int32
        - name: basic_report
          in: query
          description: basic report or not
          required: false
          type: boolean
        - name: exclude_pdbs
          in: query
          description: whether to exclude PDBs
          required: false
          type: boolean
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /healthcheck/pods/tenants/{tenant_name}/databases/{database_name}:
    post:
      description: Perform Health check for the Pod where the specificed database is located.
      operationId: podDatabaseBasicHealthCheckReport
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: tenant name
          required: true
          type: string
        - name: database_name
          in: path
          description: database name
          required: true
          type: string
        - name: exclude_pdbs
          in: query
          description: whether to exclude PDBs
          required: false
          type: boolean
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pod_types:
    post:
      description: Registers a new Pod type.
      summary: Every pod must have a unique name.
      operationId: RegisterNewPodType
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PodTypeRegistrationSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets all Pod types.
      operationId: getPodsType
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/PodType'
        400:
          description: No Pod is found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pod_types/{id}:
    get:
      description: Gets a particular Pod type.
      operationId: getPodType
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be retrieved
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/PodType'
        400:
          description: No Pod is found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Deletes a particular Pod type.
      operationId: deletePodType
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be deleted
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: No Pod is found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods:
    post:
      description: Registers a new Pod.
      summary: Every pod must have a unique URL, required fields are database host, port and service.
      operationId: createNewPod
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PodRegistrationSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets all POD
      operationId: getAllPods
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: maintenance-schedule-type
          in: query
          required: false
          type: string
          enum: [EARLY, REGULAR]
          description: list pods of the specified maintenance schedule type
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Pod'
        400:
          description: No Pod is found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}:
    post:
      description: Updates an existing Pod.
      summary: Every pod must have a unique URL, required fields are database host, port and service.
      operationId: updatePod
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be updated
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PodUpdateSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets a particular POD
      operationId: getPod
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be retrieved
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Pod'
        400:
          description: No pod found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Deletes a particular POD
      operationId: deletePod
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be deleted
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: No pod found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/databases:
    get:
      description: Gets tenant databases under a particular POD
      operationId: getPodDatabases
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be retrieved
          required: true
          type: integer
          format: int32
        - name: tenant_id
          in: query
          description: tenant id
          required: false
          type: string
        - name: tenant_name
          in: query
          description: tenant name
          required: false
          type: string
        - name: database_name
          in: query
          description: database name
          required: false
          type: string
        - name: service_type
          in: query
          description: service type
          required: false
          type: string
        - name: database_version
          in: query
          description: database version
          required: false
          type: string
        - name: status
          in: query
          description: databases status
          required: false
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TenantDatabase'
        400:
          description: No pod found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/tenants:
    get:
      description: Gets all tenants under a particular POD
      operationId: getPodTenants
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be retrieved
          required: true
          type: integer
          format: int32
        - name: tenant_id
          in: query
          description: tenant id
          required: false
          type: string
        - name: status
          in: query
          description: tenant status
          required: false
          type: string
        - name: account_status
          description: account status
          in: query
          required: false
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Tenant'
        400:
          description: No pod found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/tenants/{tenant_name}/databases:
    get:
      description: Gets all databases under a particular POD belong to a certain tenant
      operationId: getPodTenantDatabases
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod to be retrieved
          required: true
          type: integer
          format: int32
        - name: tenant_name
          in: path
          description: tenant name
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TenantDatabase'
        400:
          description: No pod found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/connections:
    post:
      description: Gets a particular POD's connection statistics.
      operationId: getPodConnectionsStat
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod
          required: true
          type: integer
          format: int32
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/connections/recycle:
    post:
      description: Recycles a particular Pods connection pool by removing invalid connections.
      operationId: recyclePodConnections
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/connections/refresh:
    post:
      description: Refreshes a particular Pods connection pool by replacing all connections.
      operationId: refreshPodConnections
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of pod
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/restore:
    post:
      description: CDB restore, the pitr time should be DD-MON-YYYY HH24:MI:SS i.e. 10-10-2017 15:02:00.
      operationId: restorePod
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod to trigger CDB restore
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PodRestoreSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/partial_archivelogs:
    post:
      description: local partial logs operation (local ADG and push for cross region ADG)
      operationId: localArchive
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/LocalPartialArchiveLogSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/remote_partial_archivelogs:
    post:
      description: remote partial logs operation (pull for cross region ADG)
      operationId: remoteArchive
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PullPartialArchiveLogSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/backup:
    post:
      description: CDB backup
      operationId: backupPod
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod to trigger CDB backup
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduledBackupSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/backup/archivelog:
    post:
      description: archivelog backup
      operationId: backupArchivelog
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod to trigger Archivelog backup
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ScheduledBackupSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/logs:
    post:
      description: Set Log config for a pod.
      operationId: setPodLogging
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod to set logging config.
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/SetLoggingSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/disable:
    post:
      description: Disable a Pod, used by CloudOps only.
      operationId: disablePod
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod.
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/enable:
    post:
      description: enable a Pod, used by CloudOps only.
      operationId: enablePod
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod.
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/scatter:
    post:
      description: Scatter a Pod, used by CloudOps only.
      operationId: scatterPod
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod.
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PodScatterSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/gather:
    post:
      description: Gather a Pod, used by CloudOps only.
      operationId: gatherPod
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod.
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/PodGatherSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/{id}/backup_params:
    post:
      description: Change CDB backup interval for a specific pod.
      operationId: changeBackupParams
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the pod.
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChangeBackupParamsSpecification'
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/backup_params:
    post:
      description: Change CDB backup interval for all pods.
      operationId: changeAllBackupParams
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ChangeBackupParamsSpecification'
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /pods/exec_sql:
    post:
      description: Execute SQL in Pods.
      operationId: executeSql
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ExecuteSqlSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /containers:
    get:
      description: List all containers
      operationId: listAllContainers
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceContainer'
        400:
          description: No resource found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /containers/{name}:
    delete:
      description: Performs a cleanup on the resource container.
      summary: Release the container back to the pool
      operationId: deleteResourceContainer
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the container
          required: true
          type: integer
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResourceContainerOperationSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /containers/{id}/logs:
    get:
      description: Get container logs
      operationId: getContainerLogs
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the container
          required: true
          type: integer
        - name: start_time
          in: query
          required: false
          type: string
          description: start time of logs to fetch
        - name: end_time
          in: query
          required: false
          type: string
          description: end time of logs to fetch
      responses:
        200:
          description: Successful Operation
          schema:
            type: string
        400:
          description: No resource found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /containers/empty:
    post:
      description: Reserve an empty resource container
      summary: Reserve an empty resource container from the pool
      operationId: createEmptyResourceContainer
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResourceContainerOperationSpecification'
      responses:
        202:
          description: Successful created job
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /containers/tenants/{tenant_name}/databases/{database_name}:
    post:
      description: Reserve a new resource container
      summary: Reserve a resource container from the pool
      operationId: createResourceContainer
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ResourceContainerOperationSpecification'
      responses:
        202:
          description: Successful created job
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resource_deployments:
    get:
      description: List all deployments
      operationId: listAllDeployments
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/ResourceDeployment'
        400:
          description: No resource found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Provision a new deployment
      summary: Provision a new deployment with specified clusters and containers in it
      operationId: provisionDeployment
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProvisionResourceDeploymentSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resource_deployments/{name}:
    delete:
      description: unprovision an existing deployment
      operationId: unprovisionDeployment
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the deployment
          required: true
          type: string
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/tenants/{tenant_name}/databases/{database_name}/stream_wallet:
    post:
      description: stream wallet to resource container assigned to a database.
      operationId: streamResourceContainerWallet
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: Params required for stream wallet
          required: true
          schema:
            $ref: '#/definitions/ResourceContainerOperationSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: Specification construction error or invalid params provided.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources:
    post:
      description: Registers a new resource
      summary: A resource must have a type, address and valid capacity.
      operationId: registerResource
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OmlResourceRegistrationSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: List all resources
      operationId: listResources
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Resource'
        400:
          description: No resource found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/recycle:
    post:
      description: Performs a cleanup on the system resources.
      summary: Recycle involves unassigning resources to unexisting PDBs.
      operationId: recycleResources
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/rotate:
    post:
      description: Performs a scan on the system resources freeing up the ones in idle state.
      summary: Rotation involves unassigning resources to unexisting PDBs preserving OML metadata.
      operationId: rotateResources
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/tenants/{name}:
    delete:
      description: Unprovisions the resources assigned to a named tenant.
      operationId: restoreTenantResources
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/tenants/{tenant_name}:
    post:
      description: reserve a resource for specified tenant.
      operationId: reserveResource
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - in: body
          name: body
          description: Params required for reserve resource operation
          required: true
          schema:
            $ref: '#/definitions/ResourceOperationSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/tenants/{tenant_name}/databases/{database_name}:
    get:
      description: Get all resources assigned to a database.
      operationId: getDatabaseResources
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/TenantDatabase'
        400:
          description: No resources found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/{id}:
    delete:
      description: Unprovisions the resources based on id.
      operationId: deleteResource
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the resource to delete
          required: true
          type: string
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/{id}/disable:
    post:
      description: disables a resource
      operationId: disableResource
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of the resource
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /resources/{id}/enable:
    post:
      description: Enables a resource
      operationId: enableResource
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of the resource
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /clusters:
    get:
      description: Get resource cluster for external application
      summary: Get status of resource cluster for a given external application
      operationId: GetClusterAllResources
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: external_application
          in: query
          required: true
          type: string
          description: name of external application
      responses:
        200:
          description: All clusters
          schema:
            $ref: '#/definitions/AllClusters'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Provision a cluster of resources for an application
      summary: Request to get a cluster of resources
      operationId: provisionResourceCluster
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          description: Params required for provision resource cluster
          required: true
          schema:
            $ref: '#/definitions/ProvisionResourceClusterSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /clusters/{name}/hosts/{hostname}:
    post:
      description: Update a cluster host
      summary: Allow app of a host to update its status
      operationId: UpdateResourceClusterHost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
        - name: hostname
          in: path
          required: true
          type: string
        - in: body
          name: body
          description: status of the host app
          required: true
          schema:
            $ref: '#/definitions/UpdateResourceClusterHostSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /clusters/{name}:
    get:
      description: Get resource cluster
      summary: Get status of resource cluster for a given name
      operationId: GetClusterResources
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: A cluster
          schema:
            $ref: '#/definitions/Cluster'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Unprovision a cluster of resources
      summary: Release cluster of resources for a given cluster name
      operationId: UnprovisionResourceCluster
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: Bad Request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        401:
          description: Unauthorized
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /services:
    post:
      description: Provisions a new Service
      summary: Every service must have a unique name, template_pdb_name is assumed to be located at Central CDB unless DB host params are specified.
      operationId: createNewService
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProvisionServiceSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets all service
      operationId: getAllServices
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Service'
        400:
          description: No service found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'

  /services/{id}:
    post:
      description: Updates an existing service
      operationId: updateService
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of service to update
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ServiceUpdateSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets a particular Service.
      operationId: getService
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of the service.
          required: true
          type: integer
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Service'
        400:
          description: No service found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Unprovisions a particular Service.
      operationId: deleteService
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: id of the service to be unprovisioned.
          required: true
          type: integer
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /service_console/tenants/{tenantName}/databases/{databaseName}/transactions:
    get:
      description: returns transaction rate per second, per hour
      operationId: getTransactionRate
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenantName
          in: path
          required: true
          type: string
        - name: databaseName
          in: path
          required: true
          type: string
        - name: offset
          in: query
          required: false
          type: integer
          format: int32
        - name: start_time
          in: query
          required: false
          type: string
        - name: end_time
          in: query
          required: false
          type: string
        - name: last_seen_granule_name
          in: query
          required: false
          type: string
        - name: last_seen_granule_chunk_number
          in: query
          required: false
          type: int
          format: int32
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: Get session activity failed
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenant_databases:
    get:
      description: Show all the provisioned tenant databases
      operationId: getTenantDatabases
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: status
          in: query
          required: false
          type: string
        - name: tenant_id
          in: query
          required: false
          type: string
        - name: tenant_name
          in: query
          required: false
          type: string
        - name: database_name
          in: query
          required: false
          type: string
        - name: cloud_database_name
          in: query
          required: false
          type: string
        - name: pod_id
          in: query
          required: false
          type: int
          format: int32
        - name: service_type
          in: query
          required: false
          type: string
        - name: database_version
          in: query
          required: false
          type: string
        - name: query_all
          in: query
          required: false
          type: string
        - name: predicates
          in: query
          required: false
          type: string
        - name: order_by
          in: query
          required: false
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            type: array
            items:
              $ref: '#/definitions/TenantDatabase'
        404:
          description: tenant database not found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /whitelists/tenants:
    post:
      description: add specified tenants to tenant whitelist.
      operationId: addTenantWhitelist
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TenantWhitelistSpecification'
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: delete all entries from tennat whitelist.
      operationId: deleteTenantWhitelist
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TenantWhitelistSpecification'
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Get tenant whitelist
      operationId: getTenantWhitelist
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/DataAccessResult'
        400:
          description: No tenant whitelist found.
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /healthcheck/tenants:
    post:
      description: Gets Health check report for all tenants.
      operationId: tenantHealthCheckReport
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /healthcheck/tenants/{tenant_name}:
    post:
      description: Gets Health check report for one specified pod.
      operationId: podSingleDetailedHealthCheckReport
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /wallets/info/tenant/{tenant_name}:
    get:
      description: Gets tenant wallet information.
      operationId: getWalletInfo
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/WalletInfo'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /wallets/info/cman:
    get:
      description: Gets tenant wallet information.
      operationId: getCMANWalletInfo
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/WalletInfo'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /wallets/info/ca:
    get:
      description: Gets tenant wallet information.
      operationId: getCAWalletInfo
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/WalletInfo'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tags:
    post:
      description: Provision a new tag
      operationID: createTag
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/TagJobSpecification'
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets all tags
      operationID: getAllTags
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tags/{id}:
    post:
      description: Updates an existing tag
      operationId: updateTag
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of tag to update
          required: true
          type: integer
          format: int32
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/TagUpdateSpecification'
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Gets a particular tag by ID
      operationId: getTag
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Removes a particular tag
      operationId: deleteTag
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: integer
      responses:
        200:
          description: Successful Operation
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{tenant_name}/databases/{database_name}/users/authenticate:
    post:
      description: Authenticate OML user management admin or OML user
      operationId: validateUserCred
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/DatabaseUserAuthSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{tenant_name}/databases/{database_name}/users:
    post:
      description: Create OML user
      operationId: createOMLUser
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OmlCreateUserSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Get all OML users
      operationId: getOMLUsers
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: No OML users found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{tenant_name}/databases/{database_name}/users/{user_id}:
    put:
      description: Update OML user
      operationId: updateOMLUser
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
        - name: user_id
          in: path
          required: true
          type: string
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/OmlUpdateUserSpecification'
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    get:
      description: Get OML user.
      operationId: getOMLUsers
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
        - name: user_id
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          type: string
        400:
          description: No OML user found
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    delete:
      description: Delete OML user
      operationId: deleteOMLUser
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
        - name: user_id
          in: path
          required: true
          type: string
        - name: drop
          in: query
          description: drop database user
          required: false
          type: boolean
      responses:
        202:
          description: Successful Operation
          schema:
            $ref: '#/definitions/OmlDeleteUserSpecification'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /oml/tenants/{tenant_name}/databases/{database_name}/tablespaces:
    get:
      description: Get permenant and temp table spaces in database
      operationId: getTablespaces
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: false
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: tenant_name
          in: path
          required: true
          type: string
        - name: database_name
          in: path
          required: true
          type: string
      responses:
        200:
          description: Successful Operation
          type: string
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /ords/conf:
    get:
      description: Get the global settings for ORDS
      summary: Get the global settings for ORDS and the search link required to find the url_mappings rest end point
      operationId: get_ords_conf
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: If-None-Match
          in: header
          required: false
          type: string
      responses:
        200:
          description: successful operation - Returns a the ORDS central configuraton json object
          schema:
             $ref: '#/definitions/ORDSCentralConfiguration'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Not Modified
          schema:
            type: string
  /ords/conf/url_mappings/hosts/{host}:
    get:
      description: Get the url_mapping for ORDS Central Configuration
      summary: Get the url_mapping for ORDS Central Configuration which includes the pool settings and connection details
      operationId: get_ords_url_mapping
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: If-None-Match
          in: header
          required: false
          type: string
        - name: host
          in: path
          description: host used in the http url to access ORDS
          required: true
          type: string
      responses:
        200:
          description: successful operation - Returns a the ORDS Central url_mapping  json object
          schema:
              $ref: '#/definitions/ORDSCentralURLMapping'
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
        403:
          description: Not Modified
          schema:
            type: string
        404:
          description: Not Found
          schema:
            type: string

  /free_database_availability:
    get:
      description: Checks whether there is capacity for free instances
      operationId: getFreeDatabaseAvailability
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/FreeDatabaseAvailability'
        401:
          description: Unauthorized
          type: string
  /tenants/{name}/databases/{database_name}/roles:
    post:
      description: Does a switchover to a extreme availability clone
      operationId: transitionRoleTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: body
          in: body
          required: false
          schema:
            $ref: '#/definitions/TransitionRoleTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/clone_links:
    delete:
      description: Stop refreshable clone to follow the source pdb and open database in read-write mode
      operationId: activateRefreshTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
    post:
      description: Clone-links operation (rebuild or reconnect)
      operationId: rebuildCloneTenantDatabase
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - in: body
          name: body
          description: payload for rebuild/reconnect refreshable clone
          schema:
            $ref: '#/definitions/CloneLinkTenantDatabaseSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'    
        401:
          description: Unauthorized request to rebuild/reconnect refreshable clone
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
        500:
          description: Internal server error occurred processing rebuild/reconnect refreshable clone request
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /capacities/pods:
    get:
      description: Get capacities of all pods
      operationId: getPodsCapacities
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              type: object
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /capacities/pods/{id}:
    get:
      description: Get capacity of a pod based on its pod id
      operationId: getPodCapacity
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: id
          in: path
          description: ID of pod whose capacity to get
          required: true
          type: integer
          format: int32
      responses:
        200:
          description: successful operation
          schema:
            type: object
        400:
          description: specification construction error
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /tenants/{name}/databases/{database_name}/sql:
    post:
      description: Runs a sql query with predicate on database name on POD CDBroot
      operationId: queryViewsByName
      consumes: application/json
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: body
          in: body
          description: supplies table_name, columns, predicates
          required: true
          schema:
            $ref: '#/definitions/DatabaseSelectSqlSpecification'
      responses:
        202:
          description: Job created
          schema:
            $ref: '#/definitions/Job'
        400:
          description: specification construction error or invalid params provided
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /databases/{database_name}/awr_reports:
    get:
      summary: Get AWR report for the specified time period.
      description: |
        Get AWR report for the specified time period. The report will include snapshots whose:
          - begin_interval_time < end time and
          - end_interval_time > start time
        If the begin and end times are equal then the report will be generated from two adjacent snapshots: one snapshot falling in the given time and the one before that.
      operationId: getAwrReport
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
        - name: start_time
          in: query
          description: report start time in UTC. should be in "YYYY-MM-DDThh:mm:ssZ" format
          required: true
          type: string
        - name: end_time
          in: query
          description: report end time in UTC. should be in "YYYY-MM-DDThh:mm:ssZ" format
          required: true
          type: string
        - name: max_size_mb
          in: query
          description: maximum size of JSON response (approximately) in MB
          required: false
          type: integer
          format: int32
      responses:
        200:
          description: successful operation - detailed HTML report.
        400:
          description: Bad Request
          schema:
            type: string
        401:
          description: Unauthorized
          schema:
            type: string
  /tenants/{name}/databases/{database_name}/manual_backup_prerequisites:
    get:
      description: Validates manual backup prerequisite for given tenant database
      operationId: validateManualBackupPrerequisite
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: false
          type: string
        - name: name
          in: path
          description: name of the tenant
          required: true
          type: string
        - name: database_name
          in: path
          description: name of the database
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/CheckBackupPrereqResponse'
  /regions:
    get:
      description: List all regions
      operationId: listRegions
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'
        404:
          description: error finding regions
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
  /regions/{name}:
    get:
      description: Get region by name
      operationId: getRegionByName
      produces: application/json
      parameters:
        - name: Authorization
          in: header
          required: true
          type: string
        - name: Request-Id
          in: header
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Region'
        404:
          description: error finding region
          schema:
            $ref: '#/definitions/SimpleRequestResponse'
definitions:
  AuthToken:
    type: object
    properties:
      access_token:
        type: string
      expires_in:
        type: integer
        format: int32
  Service:
    type: object
    properties:
      id:
        type: string
      connect_host:
        type: string
      connect_port:
        type: integer
        format: int32
      template_database_name:
        type: string
      name:
        type: string
      supported_database_versions:
        type: array
        items:
          $ref: '#/definitions/DatabaseVersion'
  ExternalApplication:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      setting:
        type: string
      auth_config:
        $ref: '#/definitions/ExternalApplicationAuthConfig'
  ExternalApplicationAuthConfig:
    type: object
    properties:
      user_auth_config:
        type: array
        items:
          $ref: '#/definitions/ExternalApplicationUserAuthConfig'
      role_auth_config:
        type: array
        items:
          $ref: '#/definitions/ExternalApplicationRoleAuthConfig'
  ExternalApplicationUserAuthConfig:
    type: object
    properties:
      identity:
        type: string
      roles:
        type: array
        items:
          type: string
  ExternalApplicationRoleAuthConfig:
    type: object
    properties:
      role:
        type: string
      path_pattern:
        type: string
  LinkIdName:
    type: object
    properties:
      canonicalLink:
        type: string
      id:
        type: string
      name:
        type: string
  TenantSubscriptionItem:
    type: object
    properties:
      category:
        type: string
      subscriptionType:
        type: string
      status:
        type: string
      createdBy:
        type: string
      createdOn:
        type: string
      serviceCategory:
        type: string
      name:
        type: string
      account:
        $ref: '#/definitions/LinkIdName'
      cloudAccount:
        $ref: '#/definitions/LinkIdName'
  TenantSubscription:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/TenantSubscriptionItem'
  Tenant:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      account_name:
        type: string
      cloud_account_id:
        type: string
      status:
        type: string
        enum:
          - UNSET
          - WHITELISTED
          - BLACKLISTED
      whitelisted:
        type: boolean
      tenant_subscription:
        $ref: '#/definitions/TenantSubscription'
      disabled_capability:
        type: array
        items:
          type: string
          enum:
            - PROVISION_TENANT
            - UNPROVISION_TENANT
            - PROVISION_TENANT_DATABASE
            - UNPROVISION_TENANT_DATABASE
            - RELOCATE_TENANT_DATABASE
            - RESIZE_TENANT_DATABASE
            - OPEN_TENANT_DATABASE
            - CLOSE_TENANT_DATABASE
            - REOPEN_TENANT_DATABASE
            - BACKUP_TENANT_DATABASE
            - RESTORE_TENANT_DATABASE
            - RENAME_TENANT_DATABASE
            - GET_TENANT_DATABASE_BACKUP
            - CHANGE_ADMIN_PASSWD
            - CHANGE_PASSWD
            - UPDATE_TENANT
            - VALIDATE_DATABASE_BACKUP_PREREQ
            - CLONE_TENANT_DATABASE
            - REFRESH_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
      disabled_operation:
        type: array
        items:
          type: string
          enum:
            - PROVISION_TENANT
            - UNPROVISION_TENANT
            - PROVISION_TENANT_DATABASE
            - UNPROVISION_TENANT_DATABASE
            - RELOCATE_TENANT_DATABASE
            - RESIZE_TENANT_DATABASE
            - OPEN_TENANT_DATABASE
            - CLOSE_TENANT_DATABASE
            - REOPEN_TENANT_DATABASE
            - BACKUP_TENANT_DATABASE
            - RESTORE_TENANT_DATABASE
            - RENAME_TENANT_DATABASE
            - GET_TENANT_DATABASE_BACKUP
            - CHANGE_ADMIN_PASSWD
            - CHANGE_PASSWD
            - UPDATE_TENANT
            - VALIDATE_DATABASE_BACKUP_PREREQ
            - CLONE_TENANT_DATABASE
            - REFRESH_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
      disabled_capabilities:
        $ref: '#/definitions/DisabledCapability'
      account_status:
        type: string
        enum:
          - BEGIN_TERMINATION
          - ACTIVE
          - BEGIN_SOFT_TERMINATION
          - CANCELED
          - DISABLED
          - PENDING_CANCELATION
          - PURGED
          - SOFT_TERMINATED
          - INITIALIZED
          - TERMINATED
          - PAID_PURGED
          - PAID_TERMINATED
          - ACCESS_DISABLED
          - UNKNOWN
  TenantDatabase:
    type: object
    properties:
      guid:
        type: string
      database_name:
        type: string
      tenant_id:
        type: string
      tenant_name:
        type: string
      pod_id:
        type: integer
        format: int32
      max_size:
        type: integer
        format: int32
      cpu_count:
        type: integer
        format: int32
      autoscaled_cpu_count:
        type: number
        format: double
      autoscaled_cpu_updated:
        type: integer
        format: int64
      autoscalable:
        type: boolean
      console_url:
        type: string
      connect_strings:
        type: array
        items:
          type: string
      connection_strings:
        type: array
        items:
           $ref: '#/definitions/DatabaseConnectString'
      service_type:
        type: string
        enum:
          - ATP
          - ADW
          - AJD
          - APEX
      lifecycle_state:
        type: string
        enum:
          - PROVISIONING
          - AVAILABLE
          - STOPPING
          - STOPPED
          - STARTING
          - RESTARTING
          - TERMINATING
          - TERMINATED
          - UNAVAILABLE
          - RESTORE_IN_PROGRESS
          - BACKUP_IN_PROGRESS
          - SCALE_IN_PROGRESS
          - AVAILABLE_NEEDS_ATTENTION
          - HIBERNATING
          - HIBERNATED
          - UPGRADING
          - RELOCATING
          - UPDATING
          - INACCESSIBLE
      internalLifecycleState:
        type: string
        enum:
          - AVAILABLE
          - SOFT_DELETING
          - SOFT_DELETED
          - HARD_DELETING
          - HARD_DELETE_FAILED
          - HARD_DELETED
          - PROVISION_TIMEOUT
          - PRE_HIBERNATION
          - PRE_TERMINATION
          - RELOCATING
          - UPGRADING
          - INACCESSIBLE
      open_mode:
        type: string
        enum:
          - MOUNTED
          - READ_ONLY
          - READ_WRITE
          - TRANSITION
          - RESTORE_TRANSITION
          - MIGRATE
      open_mode_mismatch:
        type: boolean
      mode:
        type: string
        enum:
          - READ_ONLY
          - READ_WRITE
      permission_level:
        type: string
        enum:
          - RESTRICTED
          - NON_RESTRICTED
      disabled_capability:
        type: array
        items:
          type: string
          enum:
            - PROVISION_TENANT
            - UNPROVISION_TENANT
            - PROVISION_TENANT_DATABASE
            - UNPROVISION_TENANT_DATABASE
            - RELOCATE_TENANT_DATABASE
            - RESIZE_TENANT_DATABASE
            - OPEN_TENANT_DATABASE
            - CLOSE_TENANT_DATABASE
            - REOPEN_TENANT_DATABASE
            - BACKUP_TENANT_DATABASE
            - RESTORE_TENANT_DATABASE
            - RENAME_TENANT_DATABASE
            - GET_TENANT_DATABASE_BACKUP
            - CHANGE_ADMIN_PASSWD
            - CHANGE_PASSWD
            - UPDATE_TENANT
            - VALIDATE_DATABASE_BACKUP_PREREQ
            - CLONE_TENANT_DATABASE
            - REFRESH_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE
            - TRANSITION_ROLE_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
      disabled_operation:
        type: array
        items:
          type: string
          enum:
            - PROVISION_TENANT
            - UNPROVISION_TENANT
            - PROVISION_TENANT_DATABASE
            - UNPROVISION_TENANT_DATABASE
            - RELOCATE_TENANT_DATABASE
            - RESIZE_TENANT_DATABASE
            - OPEN_TENANT_DATABASE
            - CLOSE_TENANT_DATABASE
            - REOPEN_TENANT_DATABASE
            - BACKUP_TENANT_DATABASE
            - RESTORE_TENANT_DATABASE
            - RENAME_TENANT_DATABASE
            - GET_TENANT_DATABASE_BACKUP
            - CHANGE_ADMIN_PASSWD
            - CHANGE_PASSWD
            - UPDATE_TENANT
            - VALIDATE_DATABASE_BACKUP_PREREQ
            - CLONE_TENANT_DATABASE
            - REFRESH_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE
            - TRANSITION_ROLE_TENANT_DATABASE
            - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
      additional_details:
        type: array
        items:
          type: string
      database_version:
        type: string
      documentation_link:
        type: string
      announcement:
        type: string
      cloud_database_name:
        type: string
      status_code:
        type: integer
        format: int32
      current_size:
        type: integer
        format: int32
      target_db_versions:
        type: array
        items:
          type: string
      api_base_url:
        type: string
      preview_metadata:
        $ref: '#/definitions/PreviewMetadata'
      base_cpu_count:
        type: number
        format: double
      base_storage_tb:
        type: number
        format: double
      billing_offset_cpu_count:
        type: integer
        format: int32
      billing_offset_max_size_tb:
        type: integer
        format: int32
      on_behalf_of_tenant_name:
        type: string
      free_tier:
        type: boolean
      inactive_duration_sec:
        type: integer
        format: int32
      hibernated:
        type: integer
        format: int64
      hibernation_end_date:
        type: integer
        format: int64
      data_refreshed:
        type: integer
        format: int64
        description: indicates redo applied on clone until this time
      refreshed:
        type: integer
        format: int64
        description: indicates when the last refresh job ran
      peer_database_lifecycle_state:
        type: string
        enum:
          - PROVISIONING
          - AVAILABLE
          - TERMINATING
          - TERMINATED
          - UNAVAILABLE
          - ROLE_CHANGE_IN_PROGRESS
      data_guard:
        type: boolean
        description: indicates data guard is enabled by user (user setting)
      switched_over:
        type: integer
        format: int64
        description: indicates when last switchover happened
      failed_over:
        type: integer
        format: int64
        description: indicates when last failover happened
      clone_type:
        type: string
        enum:
          - REFRESHABLE
          - VIRTUAL
          - STANDBY
      refreshable:
        type: boolean
        description: indicates whether the database is a refreshable clone
      refresh_time_lag_sec:
        type: integer
        format: int32
        description: refreshable clone time lag in seconds
      refresh_interval_sec:
        type: integer
        format: int32
        description: interval at which refresh will happen in seconds
      clone_source_database_name:
        type: string
        description: indicates the source database name for a refreshable clone
      private_endpoint:
        $ref: '#/definitions/PrivateEndpoint'
      peer_data_refreshed:
        type: integer
        format: int64
        description: indicates redo applied on ADG until this time
      peer_refreshed:
        type: integer
        format: int64
        description: indicates when the last refresh job ran on ADG
      peer_data_loss_sec:
        type: integer
        format: int32
        description: indicates current data-loss in seconds on ADG if role was transitioned
      disabled_capabilities:
        $ref: '#/definitions/DisabledCapability'
      encryption_keys:
        type: array
        items:
           $ref: '#/definitions/EncryptionKey'
        description: indicates the kms keys for the pdb
      # contain external application detail for a pdb
      # it is a map that the keys is the external app name
      # Ex: external_application_details : { "APEX": {"version": "1.0.0"},
      #                                      "ORDS": {"version": "2.0.0"} }
      external_application_details:
        description: external application details for a pdb
        type: object
        properties:
          ORDS:
            $ref: '#/definitions/ExternalApplicationAttribute'
          APEX:
            $ref: '#/definitions/ExternalApplicationAttribute'
        required:
          - ORDS
          - APEX
        additionalProperties:
          $ref: '#/definitions/ExternalApplicationAttribute'
        example:
          ORDS: {"version": "2.0.0"}
          APEX: {"version": "2.0.0"}
      email_addresses:
        type: string
        description: Recipients of email notifications, comma seperated email addresses
      maintenance_schedule_type:
        type: string
        enum: [EARLY, REGULAR]
        default: REGULAR
        description: maintenance schedule type of the tenant database
      # list of supported regions to which
      # this TenantDatabase can be cloned to.
      supported_destination_regions_for_clone:
        type: array
        items:
          type: string
      auto_refreshable:
        type: boolean
      auto_refresh_frequency:
        type: integer
        format: int32
      auto_refresh_point:
        type: integer
        format: int32
      refresh_start_time:
        type: integer
        format: int64
      peer_databases:
        type: array
        items:
          $ref: '#/definitions/PeerDatabase'
      source_database:
        $ref: '#/definitions/PeerDatabase'
      adg_role:
        type: string
        enum:
          - PRIMARY
          - STANDBY
      adg_region_role:
        description: indicates type of REGION in which TenantDatabase is present
        type: string
        enum:
          - SOURCE
          - TARGET
      pod_name:
        type: string
      md5_hash:
        type: string
        description: hash of the TenantDatabase object uploaded to object storage
      region_name:
        description: indicates region name to which this TenantDatabase belongs to
        type: string
      region_code:
        description: indicates region code to which this TenantDatabase belongs to
        type: string
      group_id:
        description: group identifier, ties up Primary Db with its ADGs
        type: string
      resource_cpu_count:
        type: int32
      resource_cpu_billed:
        type: int32
      autoscalable_storage:
        type: boolean
        description: Is the storage autoscalable
      autoscaled_storage_tb:
        type: number
        format: double
        description: autoscaled storage size for billing
      autoscaled_storage_updated:
        type: integer
        format: int64
        description: date and time of updating autoscaled_storage_tb
  TenantDatabaseBackupList:
    type: object
    properties:
      backups:
        type: array
        items:
          $ref: '#/definitions/TenantDatabaseBackup'
  TenantDatabaseBackup:
    properties:
      id:
        type: string
      started:
        type: integer
        format: int64
      finished:
        type: integer
        format: int64
      # expiration = start time + retention
      expiration:
        type: integer
        format: int64
      # size is in bytes
      size:
        type: integer
        format: int64
      # full or incremental
      type:
        type: string
      # user or system
      initiator:
        type: string
      retention_days:
        type: integer
        format: int32
      myTag:
        type: string
      kms_master_key_id:
        type: string
        description: OCID of KMS key
      kms_vault_id:
        type: string
        description: OCID of KMS vault
  Job:
    type: object
    properties:
      id:
        type: string
      pod_id:
        type: integer
        format: int32
      database_id:
        type: string
      db_id:
        type: string
      tenant_id:
        type: string
      host:
        type: string
      retry_id:
        type: string
      worker:
        type: string
      type:
        type: string
        enum: &JobTypeName
          - REGISTER_POD
          - UPDATE_POD
          - PROVISION_SERVICE
          - UNPROVISION_SERVICE
          - PROVISION_TENANT
          - UNPROVISION_TENANT
          - PROVISION_TENANT_DATABASE
          - UNPROVISION_TENANT_DATABASE
          - RELOCATE_TENANT_DATABASE
          - RESIZE_TENANT_DATABASE
          - OPEN_TENANT_DATABASE
          - CLOSE_TENANT_DATABASE
          - REOPEN_TENANT_DATABASE
          - BACKUP_TENANT_DATABASE
          - RESTORE_TENANT_DATABASE
          - RENAME_TENANT_DATABASE
          - GET_TENANT_DATABASE_BACKUP
          - SWITCHOVER_TENANT_DATABASE
          - FAILOVER_TENANT_DATABASE
          - AUTOMATIC_FAILOVER_TENANT_DATABASE
          - SET_LOGGING
          - CHANGE_ADMIN_PASSWD
          - NOTIFICATION
          - POD_RESTORE
          - POD_BACKUP
          - POD_BACKUP_ARCHIVELOG
          - POD_BACKUP_CDB_FULL
          - POD_BACKUP_CDB_CUMINC
          - POD_BACKUP_CDB_INC
          - POD_BACKUP_CDB_BATCHPDBS
          - REGISTER_RESOURCE
          - UPDATE_TENANT
          - REGISTER_POD_TYPE
          - TENANT_HEALTHCHECK
          - EXEC_SQL
          - UPDATE_SERVICE
          - VALIDATE_DATABASE_BACKUP_PREREQ
          - CLONE_TENANT_DATABASE
          - REFRESH_TENANT_DATABASE
          - NOTIFICATION_SCHEDULE
          - NOTIFICATION_SUBSCRIBE
          - POD_SCATTER
          - POD_GATHER
          - UPDATE_TENANT_DATABASE
          - OML_CLEANUP
          - SERVICE_MAINTENANCE
          - UPDATE_ASYNC_JOB_STATUS
          - SOURCE_LCM
          - BASIC_HEALTHCHECK
          - DETAILED_PDB_HEALTHCHECK
          - HARD_UNPROVISION_TENANT_DATABASE
          - WORKER_OPERATION
          - API_MANAGER_OPERATION
          - RESOURCE_HEALTHCHECK
          - CHANGE_PASSWD
          - DATABASE_MAINTENANCE
          - ACL_TENANT_DATABASE
          - RESOURCE_CLUSTER_OPERATION
          - TENANT_DATABASE_EXTERNAL_APPLICATION
          - POD_DATA_COLLECTION
          - POD_API_SETTINGS_OPERATION
          - GET_AUTOSCALED_CPU
          - KILL_JOB
          - TENANT_EXTERNAL_APPLICATION
          - TENANT_MAINTENANCE
          - SHRINK_TENANT_DATABASE
          - EMAIL_TEMPLATE_OPERATION
          - MANAGE_METRICS
          - OML_USERS_OPERATIONS
          - ROTATE_TENANT_WALLET
          - ROTATE_WALLET
          - VCN_MAPPING
          - PROVISION_WALLET
          - CREATE_WALLET
          - INSTALL_APP_RESOURCE
          - CHECK_POD_BROKER_CONNECTION
          - HIBERNATE_TENANT_DATABASE
          - POD_REFRESH_CLONE
          - BACKUP_MAINTENANCE
          - COLLECT_CUSTOMER_METRICS
          - SEND_CUSTOMER_METRICS
          - BASIC_RESOURCE_HEALTHCHECK
          - CLONE_FROM_BACKUP
          - PROVISION_PATCH
          - SET_TENANT_KEY
          - SEND_INTERNAL_METRICS
          - CLONE_OML
          - COLLECT_INTERNAL_METRICS
          - PARTITION_CLEANUP
          - KILL_LONG_SESSIONS
          - TRANSITION_ROLE_TENANT_DATABASE
          - EXTAPP_RESOURCE_HEALTHCHECK
          - RESOURCE_STATUS
          - RESTORE_TENANT_DATABASE_FROM_OBJECT_STORE
          - COLLECT_EXTERNAL_APPLICATION_METRICS
          - POD_PARTIAL_ARCHIVELOG
          - CLONE_LINK_TENANT_DATABASE
          - COLLECT_HOST_METRICS
          - SEND_HOST_METRICS
          - EXTERNAL_APPLICATION_MAINTENANCE
          - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
          - ACL_EXTERNAL_APPLICATION
          - EXTERNAL_APPLICATION_OPERATION
          - COLLECT_PROXY_PDB_METRICS
          - MIGRATE_WORKLOAD
          - CLOSE_DATABASE_CONNECTIONS
          - PING_HEALTHCHECK
          - SWAP_TENANT_DATABASE_ROLE
          - RESOURCE_CONTAINER_OPERATION
          - RESOURCE_OPERATION
          - ROTATE_RESOURCE_CONTAINERS
          - RESOURCE_CONTAINER_LOGS
          - ALLOW_DATABASE_CONNECTIONS
          - DISALLOW_DATABASE_CONNECTIONS
          - RECLOSE_TENANT_DATABASE
          - ADVANCED_PDB_HEALTHCHECK
          - UPDATE_KMS_KEY_STATE
          - PROVISION_RELOCATE_CLONE
          - ACTIVATE_RELOCATE_CLONE
          - OPEN_RELOCATE_CLONE
          - HANDLE_ORPHAN_PDBS
          - UPDATE_DATA_GUARD
          - BROKER_WALLET_MAINTENANCE
          - MIGRATE_AJD_WORKLOAD
          - MIGRATE_APEX_WORKLOAD
          - RESTORE_ARCHIVELOG
          - UPDATE_FORCE_REDO_LOGGING
          - CREATE_TENANT_WALLET
          - RESTORE_TENANT_DATABASE_FROM_CLONE
          - RESTORE_TENANT_DATABASE_IN_PLACE
          - VALIDATE_RESTORE_TENANT_DATABASE
          - REFRESH_CLONE_BY_SOURCE
          - INT_OPEN_TENANT_DATABASE
          - TENANT_DATABASE_RESOURCE_PRINCIPAL
          - UPDATE_KMS_KEY
          - RESOURCE_PDB_CALLBACK
          - RESOURCE_DEPLOYMENT_OPERATION
          - COLLECT_APEX_METRICS
          - PULL_POD_PARTIAL_ARCHIVELOG
          - PUSH_POD_PARTIAL_ARCHIVELOG
          - GET_MESSAGE_FROM_OBJECT_STORAGE
          - PUT_MESSAGE_TO_OBJECT_STORAGE
          - OBJECT_STORAGE_SYNC_UP
          - POD_BACKUP_SCHEDULER
          - RESTORE_PLAN_TENANT_DATABASE
          - FOREIGN_RESTORE_TENANT_DATABASE
          - BACKUP_FOR_CLONE_TENANT_DATABASE
          - BACKUP_TO_POD_BUCKET_TENANT_DATABASE
          - FOREIGN_CLONE_TENANT_DATABASE
          - SEND_REQUEST_FOR_SOURCE_DATABASE
          - CREATE_STANDBY_TENANT_DATABASE
          - RESTORE_PLAN_FOR_CLONE_TENANT_DATABASE
          - CROSS_REGION_DATABASE_MAINTENANCE
          - FINAL_FOREIGN_RESTORE_PREREQUISITE
          - UPDATE_CROSS_REGION_ROLE_TENANT_DATABASE
          - SWITCHOVER_PRIMARY_TO_STANDBY_TENANT_DATABASE
          - SWITCHOVER_STANDBY_TO_PRIMARY_TENANT_DATABASE
          - FAILOVER_PRIMARY_TO_STANDBY_TENANT_DATABASE
          - FAILOVER_STANDBY_TO_PRIMARY_TENANT_DATABASE          
          - INITIATE_ROLE_TRANSITION_TENANT_DATABASE
          - TRANSITION_ROLE_PREREQUISITE
          - INITIAL_REFRESH_TENANT_DATABASE
      subtype:
        type: string
      request_id:
        type: string
      spec:
        $ref: '#/definitions/JobSpecification'
      status:
        type: string
        enum: [QUEUED, RECEIVED, STARTED, ASYNC_STARTED, SUCCESS, FAILURE, RETRY, DUPLICATE, SCHEDULED, STOPPED, TIMEOUT, EXPIRED, KILLED]
      job_result:
        $ref: '#/definitions/SimpleRequestResponse'
      work_request:
        $ref: '#/definitions/WorkRequest'
      ended:
        type: boolean
      retry:
        type: boolean
      created:
        type: integer
        format: int64
      started:
        type: integer
        format: int64
      finished:
        type: integer
        format: int64
      updated:
        type: integer
        format: int64
      deleted:
        type: integer
        format: int64
      scheduled:
        type: integer
        format: int64
      stopped:
        type: integer
        format: int64
      eta:
        type: integer
        format: int64
      pct_complete:
        type: number
        format: double
      source_database_id:
        type: string
      peer_cloud_provider:
        type: string
        description: peer job cloud provider
      peer_region_code:
        type: string
        description: peer job region code
      peer_pod_name:
        type: string
        description: pod-name on which peer pod resides
  AuthTokenSpecification:
    type: object
    properties:
      grant_type:
        type: string
      token:
        type: string
      username:
        type: string
      password:
        type: string
      scope:
        $ref: '#/definitions/AuthTokenScope'
  DCNStatus:
    type: object
    properties:
      host_name:
        type: string
      dcn_status:
        type: string
  DcnPropertyList:
    type: object
    properties:
      property_names:
        type: array
        items:
          type: string
  ConcurrentTypeMapper:
    type: object
    properties:
      type:
        type: string
      concurrent_types:
        type: array
        items:
          type: string
  AuthTokenScope:
    type: object
    properties:
      cloud_database_name:
        type: string
      cloud_username:
        type: string
      database_name:
        type: string
      tenant_name:
        type: string
      job_id:
        type: string
      external_application_username:
        type: string
      external_application_name:
        type: string
        enum:
          - PERFHUB
  JobSpecification:
    type: object
    properties:
      enable_log:
        type: boolean
        default: true
      version:
        type: string
      tenant_name:
        type: string
      database_name:
        type: string
      data:
        $ref: '#/definitions/Data'
      user_id:
        type: string
        description: OCID of user
  Data:
    type: object
    properties:
      service_name:
        type: string
      database_name:
        type: string
      tenant_name:
        type: string
  ProvisionTenantSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - tenant_name
        properties:
          tenant_name:
            type: string
          account_name:
            type: string
          cloud_account_id:
            type: string
          autoscalable:
            type: boolean
  UpdateTenantSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          new_tenant_name:
            type: string
          account_name:
            type: string
          cloud_account_id:
            type: string
          tenant_key:
            type: string
          cpu_billing_ratio:
            type: float
          cpu_alloc_multiplier:
            type: int32
          state:
            $ref: '#/definitions/TenantState'
        minProperties: 1
  OmlCreateUserSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          user_id:
            type: string
  OmlUpdateUserSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          user_id:
            type: string
  UnprovisionTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          on_behalf_of_tenant_name:
            type: string
          extreme_availability:
            type: boolean
            description: indicates whether to unprovision extreme availability clone only
          user_principal:
            type: string
            description: User principal
  ProvisionTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - database_name
          - service_name
          - max_size
          - cpu_count
          - admin_password
        properties:
          database_name:
            type: string
          service_name:
            type: string
            enum:
              - ATP
              - ADW
              - AJD
              - APEX
          max_size:
            type: integer
            format: int32
          cpu_count:
            type: integer
            format: int32
          autoscalable:
            type: boolean
          admin_password:
            type: string
          autoscalable_storage:
            type: boolean
            description: Is the storage autoscalable
          cloud_database_name:
            type: string
          source_database_name:
            type: string
          source_cloud_database_name:
            type: string
          target_version:
            type: string
          database_version:
            type: string
          metadata_only:
            type: boolean
          clone_type:
            type: string
            enum:
              - REFRESHABLE
              - VIRTUAL
              - STANDBY
          refreshable:
            type: boolean
            description: indicates to create a refreshable clone
          extreme_availability:
            type: boolean
            description: indicates to create a extreme availability clone
          refresh_time_lag_sec:
            type: integer
            format: int32
          refresh_interval_sec:
            type: integer
            format: int32
          static_placement:
            type: Boolean
            default: false
          dest_pod_id:
            type: integer
            format: int32
          tags:
            type: object
            additionalProperties:
              type: string
          ace_hosts:
            type: array
            description: Host being granted access
            items:
              $ref: '#/definitions/ACEHost'
          preview_metadata:
            type: object
            description: Metadata for preview
            items:
              $ref: '#/definitions/PreviewMetadata'
          compartment_id:
            type: string
            description: OCID of Compartment
          clone_source_region:
            type: string
            description: Region details from where the TenantDatabase needs to be cloned from.
          on_behalf_of_tenant_name:
            type: string
            description: Tenant name set by tags
          external_application_name:
            type: string
            description: External Application name, like ORDS
          external_application_proxy_user_password:
            type: string
          free_tier:
            type: boolean
          billing_offset_cpu_count:
            type: integer
            format: int32
          billing_offset_max_size_tb:
            type: integer
            format: int 32
          private_endpoint:
            $ref: '#/definitions/PrivateEndpoint'
          optional_args:
            type: string
          kms_key:
            description: Co-ordinates of the KMS key
            $ref: '#/definitions/KmsKey'
          email_addresses:
            type: string
            description: Recipients of email notifications, comma seperated email addresses
          maintenance_window:
            $ref: '#/definitions/MaintenanceWindow'
          maintenance_schedule_type:
            type: string
            enum: [EARLY, REGULAR]
            default: REGULAR
            description: maintenance schedule type of the tenant database
          mode:
            type: string
            enum:
              - READ_ONLY
              - READ_WRITE
          auto_refreshable:
            type: boolean
          auto_refresh_frequency:
            type: integer
            format: int32
          auto_refresh_point:
            type: integer
            format: int32
          refresh_start_time:
            type: integer
            format: int64
          user_principal:
            type: string
            description: User principal
  RestoreTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          restore_time_ms:
            type: integer
            format: int64
          restore_time_str:
            type: string
          choice_name:
            type: string
            description: optionally one can force VALIDATE, IN_PLACE, CLONE
          savelog:
            type: boolean
          debug:
            type: string
          use_pdpitr:
            type: boolean
            description: force pdb pitr for restore
          source_pod_id:
            type: integer
            description: source pod id on which the source pdb originally exists
          dest_pod_id:
            type: integer
            description: placement of pdb after restore from clone
          allow_free_tier:
            type: boolean
            description: allow restore for free_tier pdb
  RestoreTenantDatabaseInPlaceSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          restore_time_ms:
            type: integer
            format: int64
          restore_time_str:
            type: string
          savelog:
            type: boolean
          debug:
            type: string
          use_pdpitr:
            type: boolean
            description: force pdb pitr for restore
  RestoreTenantDatabaseFromCloneSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          restore_time_ms:
            type: integer
            format: int64
          restore_time_str:
            type: string
          source_pod_id:
            type: integer
            description: source pod id on which the source pdb originally exists
          dest_pod_id:
            type: integer
            description: placement of pdb after restore from clone
  ValidateRestoreTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          restore_time_ms:
            type: integer
            format: int64
          restore_time_str:
            type: string
          use_from_clone:
            type: boolean
            description: run only restore from backup validation
  ForeignRestoreTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          plugin_database:
            type: boolean
            description: plugin database at end this operation
          restore_plan:
            $ref: '#/definitions/RestorePlan'
            description: end point where restore plan can be fetched
          dest_pod_id:
            type: integer
            format: int32
            required: false
            description: optionally user can specify the destination pod id
  ComposedRestoreTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          restore_time_ms:
            type: integer
            format: int64
          restore_time_str:
            type: string
          choice_name:
            type: string
            description: optionally one can force VALIDATE, IN_PLACE, CLONE
          savelog:
            type: boolean
          debug:
            type: string
          use_pdpitr:
            type: boolean
            description: force pdb pitr for restore
          source_pod_id:
            type: integer
            description: source pod id on which the source pdb originally exists
          dest_pod_id:
            type: integer
            description: placement of pdb after restore from clone
          allow_free_tier:
            type: boolean
            description: allow restore for free_tier pdb
          plugin_database:
            type: boolean
            description: plugin database at end this operation
          restore_plan:
            $ref: '#/definitions/RestorePlan'
            description: end point where restore plan can be fetched
          dest_pod_id:
            type: integer
            format: int32
            required: false
            description: optionally user can specify the destination pod id
  OmlResourceRegistrationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          resource_type:
            type: string
          resource_name:
            type: string
          resource_capacity:
            type: integer
            format: int32
  OmlDeleteUserSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          user_id:
            type: string
  PodUpdateSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          pod_type:
            type: string
          db_service:
            type: string
          db_port:
            type: integer
            format: int32
          pod_version:
            type: string
          free_tier:
            type: boolean
          maintenance_window:
            $ref: '#/definitions/MaintenanceWindow'
          next_maintenance:
            $ref: '#/definitions/NextMaintenance'
          disabled_capability:
            type: string
          job_limits:
            type: array
            description: Pod jobs with their types and corresponding limits
            items:
              $ref: '#/definitions/JobLimit'
  ResizeTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          max_size:
            type: integer
            format: int32
          cpu_count:
            type: integer
            format: int32
        minProperties: 1
  SwapTenantDatabaseRoleSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          undo_failed_transition:
            type: boolean
            description: indicates to undo swap of previous failed transition role job
  AllowDatabaseConnectionsSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          connection_allowed:
            type: integer
            format: int64
          pod_id:
            type: integer
            format: int32
        minProperties: 1
  DisallowDatabaseConnectionsSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          connection_disallowed:
            type: integer
            format: int64
          pod_id:
            type: integer
            format: int32
        minProperties: 1
  UpdateForceRedoLoggingSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          force_redo_logging:
            type: boolean
            description: indicates whether redo logging enabled or disabled
        minProperties: 1
  UpdateDataGuardSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - data_guard
        properties:
          data_guard:
            type: boolean
            description: indicates the ADG to be enabled or disabled
          pod_type:
            type: string
  RecloseTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          reclosed:
            type: integer
            format: int64
        minProperties: 1
  CloseTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          closed:
            type: integer
            format: int64
  OpenTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          opened:
            type: integer
            format: int64
        minProperties: 1
  UpdateTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          max_size:
            type: integer
            format: int32
          cpu_count:
            type: integer
            format: int32
          autoscalable:
            type: boolean
          autoscalable_storage:
            type: boolean
            description: Is the storage autoscalable
          shrink_only:
            type: boolean
            description: Is it an update call to only shrink storage
          compartment_id:
             type: string
             description: OCID of Compartment
          external_application_name:
            type: string
            description: External Application name, like ORDS
          external_application_proxy_user_password:
            type: string
          free_tier:
            type: boolean
          refresh_time_lag_sec:
            type: integer
            format: int32
          refresh_interval_sec:
            type: integer
            format: int32
          data_guard:
            type: boolean
            description: enables or disables ADG for a tenant database
          billing_offset_cpu_count:
            type: integer
            format: int 32
          billing_offset_max_size_tb:
            type: integer
            format: int 32
          announcement:
            type: string
          lifecycle_details:
            type: string
          service_name:
            type: string
            enum:
              - ATP
              - AJD
              - APEX
          database_version:
            type: string
          cloud_database_name:
            type: string
          mode:
            type: string
            enum:
              - READ_ONLY
              - READ_WRITE
          permission_level:
            type: string
            enum:
              - RESTRICTED
              - NON_RESTRICTED
          data_refresh_time_str:
            type: string
            description: Refresh an existing tenant database. data_refresh_time_str is milisecond since Epoch 1970 UTC, and data_refresh_time_str follows the ISO-8601 UTC instant format ex 2017-08-17T23:10:01Z.
          opened:
            type: integer
            format: int64
          closed:
            type: integer
            format: int64
          reopened:
            type: integer
            description: epoch timestamp
            format: int64
          name:
            type: string
            description: new database name for rename purpose
            $ref: '#/definitions/RenameTenantDatabaseSpecification'
          kms_key:
            description: Co-ordinates of the KMS key
            $ref: '#/definitions/KmsKey'
          email_addresses:
            type: string
            description: Recipients of email notifications, comma seperated email addresses
          tags:
            type: object
            additionalProperties:
              type: string
          auto_refreshable:
            type: boolean
          auto_refresh_frequency:
            type: integer
            format: int32
          auto_refresh_point:
            type: integer
            format: int32
          refresh_start_time:
            type: integer
            format: int64
        minProperties: 1
  TenantDatabasePrivateEndpointSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          compartment_id:
            type: string
            description: OCID of Compartment
          vcn_id:
            type: string
            description: customer's vcn ocid
          subnet_id:
            type: string
            description: subnet ocid in customer's vcn
          dns_prefix:
            type: string
            description: FQDN prefix for createing private endpoint
          network_security_groups:
            type: array
            description: List of Network Security Groups in VCN
            items:
              type: string
          private_endpoint:
            $ref: '#/definitions/PrivateEndpoint'
          user_principal:
            type: string
            description: User principal
            
  CloneLinkTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties: 
          operation:
            type: string
            description: for reconnect DBaaS need to pass op explicitly
            enum:
              - REBUILD
              - RECONNECT

  ChangeAdminPasswdSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - admin_passwd
        properties:
          admin_passwd:
            type: string
  ChangePasswdSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - password
        properties:
          password:
            type: string
  CreatePodAPISettingsSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - pod_api_name
          - method
          - uri
          - max_chunk_size_bytes
          - max_total_chunk_count
          - collection_interval_sec
          - retention_sec
          - date_format
          - enabled
        properties:
          pod_api_name:
            type: string
          method:
            type: string
          uri:
            type: string
          max_chunk_size_bytes:
            type: int
          max_total_chunk_count:
            type: int
          collection_interval_sec:
            type: int
          retention_sec:
            type: int
          date_format:
            type: string
          enabled:
            type: boolean
  UpdatePodAPISettingsSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          pod_api_name:
            type: string
          method:
            type: string
          uri:
            type: string
          max_chunk_size_bytes:
            type: int
          max_total_chunk_count:
            type: int
          collection_interval_sec:
            type: int
          retention_sec:
            type: int
          date_format:
            type: string
          enabled:
            type: boolean
  CheckBackupPrereqResponse:
    type: object
    properties:
      details:
        type: string
      status:
        type: string
        enum: [SUCCESS, FAILURE]
      manual_backup_bucket_name:
        type: string
      manual_backup_store:
       type: string
  TenantWhitelistSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          tenants:
            type: string
  getPodLogResponse:
    type: object
    properties:
      details:
        type: string
      status:
        type: string
        enum: [OK, NOT_FOUND]
  WalletInfo:
    type: object
    properties:
      subject:
        type: string
      issuer:
        type: string
      validUntil:
        type: string
      signAlgo:
        type: string
      keyLen:
        type: string
      slNum:
        type: string
  SimpleRequestResponse:
    type: object
    properties:
      code:
        type: string
      message:
        type: string
  ErrorRequestResponse:
    type: object
    allOf:
      - $ref: '#/definitions/SimpleRequestResponse'
      - type: object
        properties:
          error:
            type: string
  PreviewMetadataSpecification:
    type: object
    properties:
      preview:
        type: boolean
      preview_start_date:
        type: string
      preview_end_date:
        type: string
      terminate_on_preview_end:
        type: boolean
      notification_email_id:
        type: string
  KillJobSpecification:
    type: object
    properties:
      version:
        type: string
  RelocateTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - dest_pod_id
        properties:
          dest_pod_id:
            type: string
          ignore_insufficient_cpu:
            type: boolean
          ignore_insufficient_storage:
            type: boolean
          ignore_database_version_mismatch:
            type: boolean
          ignore_service_version_mismatch:
            type: boolean
          ignore_static_pod_placement:
            type: boolean
          maintenance_window:
            $ref: '#/definitions/MaintenanceWindow'
  ServiceUpdateSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          connect_url_template:
            type: string
          console_url_template:
            type: string
          api_base_url_template:
            type: string
          additional_details_template:
            $ref: '#/definitions/AdditionalDetailsTemplate'
            type: object
  RenameTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - name
        properties:
          name:
            type: string
  RefreshTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          data_refresh_time_str:
            type: string
  RefreshCloneBySourceSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - refreshed
        properties:
          refresh_clone_by_source:
            type: boolean
          data_refresh_time_str:
            type: string
            description: Refresh an existing tenant database. data_refresh_time_str is milisecond since Epoch 1970 UTC, and data_refresh_time_str follows the ISO-8601 UTC instant format ex 2017-08-17T23:10:01Z.
  ChangeBackupParamsSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          retention_in_days:
            type: integer
            format: int32
          flashback_time_in_hours:
            type: integer
            format: int32
          backup_retry_count:
            type: integer
            format: int32
          backup_observe_time_in_hours:
            type: integer
            format: int32
  SetLoggingSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - trace
          - alert
          - stdout
          - table
          - level
          - queue
          - autonomous
        properties:
          trace:
            type: boolean
            description: Trace Logging configuration
          alert:
            type: boolean
            description: Logging alerts Configuration
          stdout:
            type: boolean
            description: Logger outputs to stdout
          table:
            type: boolean
            description: Table logging configuration
          level:
            type: string
            description: Logging level configuration
            enum:
              - OFF
              - FATAL
              - ERROR
              - WARN
              - INFO
              - DEBUG
              - ALL
          queue:
            type: boolean
            description: Queue Logging configuration
          autonomous:
            type: boolean
            description: Autonomous logging configuration
  PartialArchiveLogSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          -operation
        properties:
          operation:
            type: string
            description: |
              GENERATE (Generates PartialArchive Logs)
              SET (sets Log archive Destination)
              Clear (Clear log archive destination)
            enum:
              - GENERATE
              - SET
              - CLEAR
          debug:
            type: string
            description: turns on debug flag on POD
          savelog:
            type: boolean
            description: saves logfile on POD file system
          transition:
            type: boolean
            description: true if called for transition
  SetResourceManagementRulesSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          resource_management_rules:
            type: array
            items:
              $ref: '#/definitions/ResourceManagementRules'
  ResourceManagementRules:
    type: object
    properties:
      consumer_group_name:
        type: string
      io_mb_limit:
        type: Integer
      elapsed_time_limit:
        type: Integer
      cpu_shares:
        type: Integer
  DatabaseUserAuthSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          user_id:
            type: string
  CancelSqlStatementSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          session_id:
            type: integer
            format: int64
          session_serial_no:
            type: integer
            format: int64
          instance_id:
            type: integer
            format: int64
  NotificationSubscribeSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          recipients:
            type: string
          job_types:
            type: string
          job_status:
            type: string
  PodRestoreSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          restore_time_str:
            type: string
  RestoreArchiveLogSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - from_time_str
        properties:
          from_time_str:
            type: string
            description: start restoring archivelog from this time
          to_time_str:
            type: string
            description: start restoring archivelog until this time
          log_dest:
            type: string
            description: restore archivelog to this destination
          debug:
            type: string
          savelog:
            type: boolean
  OmlProvisionSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          database_name:
            type: string
  DatabaseUserSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          user_id:
            type: string
          accountStatus:
            type: string
          email:
            type: string
          grantedRole:
            type: string
          defaultTablespace:
            type: string
  PodGatherSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          autonomous:
            type: boolean
  OmlUnprovisionSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          database_name:
            type: string
  OmlReplaceWalletSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          database_name:
            type: string
  PodScatterSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          canOverProvision:
            type: boolean
  OmlAccess:
    type: object
    properties:
      payload:
        type: string
  DataAccessResult:
    type: object
    properties:
      status:
        type: string
        enum: [OK, CREATED, ACCEPTED, NO_CONTENT, RESET_CONTENT, PARTIAL_CONTENT, MOVED_PERMANENTLY, FOUND, SEE_OTHER, NOT_MODIFIED, USE_PROXY, TEMPORARY_REDIRECT, BAD_REQUEST, UNAUTHORIZED, PAYMENT_REQUIRED, FORBIDDEN, NOT_FOUND, METHOD_NOT_ALLOWED, NOT_ACCEPTABLE, PROXY_AUTHENTICATION_REQUIRED, REQUEST_TIMEOUT, CONFLICT, GONE, LENGTH_REQUIRED, PRECONDITION_FAILED, REQUEST_ENTITY_TOO_LARGE, REQUEST_URI_TOO_LONG, UNSUPPORTED_MEDIA_TYPE, REQUESTED_RANGE_NOT_SATISFIABLE, EXPECTATION_FAILED, INTERNAL_SERVER_ERROR, NOT_IMPLEMENTED, BAD_GATEWAY, SERVICE_UNAVAILABLE, GATEWAY_TIMEOUT, HTTP_VERSION_NOT_SUPPORTED]
      details:
        type: string
  NotificationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          tenant_name:
            type: string
          database_name:
            type: string
  ProvisionResourceClusterSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - name
          - cpu_count
          - database_guid
          - app_type
        properties:
          name:
            type: string
          cpu_count:
            type: integer
          database_guid:
            type: string
          app_type:
            type: string
        minProperties: 4
  UpdateResourceClusterHostSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - tag
        properties:
          tag:
            type: string
            minLength: 1
            maxLength: 32
        minProperties: 1
  PodRegistrationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          availability_domain:
            type: string
          guid:
            type: string
          pod_version:
            type: string
          service_version:
            type: string
          free_tier:
            type: boolean
          maintenance_window:
            $ref: '#/definitions/MaintenanceWindow'
  ProvisionServiceSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          name:
            type: string
          service_version:
            type: string
          template_database_name:
            type: string
          autoscale_cpu_multiplier:
            type: float
          root_database:
            type: boolean
          db_host:
            type: string
          db_service:
            type: string
          db_port:
            type: integer
          crypto_wallet:
            type: object
          additional_details_template:
            type: object
          free_tier:
            type: boolean
            description: Service is free or paid
          upgrade_target_versions:
            type: array
            description: target database versions for upgrade
            items:
              type: string
          lockdown_profile:
            type: string
            description: lockdown_profile of each service
          autoscalable_storage:
            type: boolean
            description: Is the storage autoscalable
          autoscale_storage_multiplier:
            type: float
            description: The multiplier for maximum autoscaled storage
          autoscale_storage_formula:
            type: string
            description: Formula for autoscaled storage
  CreateTenantWalletSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          tenant_wallet_passwd:
            type: string
  ExecuteSqlSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          sql:
            type: string
          pod_id:
            type: integer
            format: int32
          pod_type:
            type: string
          all_pods:
            type: boolean
  PodTypeRegistrationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          name:
            type: string
          central:
            type: boolean
          maintenance_schedule_type:
            type: string
            enum: [EARLY, REGULAR]
            default: REGULAR
            description: maintenance schedule type of the pod type
  AllClusters:
    type: array
    items:
      $ref: '#/definitions/Cluster'
  Cluster:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      deployment_id:
        type: integer
      containers:
        type: array
        items:
          $ref: '#/definitions/ResourceContainer'
  ResourceContainer:
    type: object
    properties:
      type:
        type: string
        description: container type of this container
      resource_type:
        type: string
        description: resource type of this container
      cpu:
        type: integer
      state:
        type: string
        enum:
          - CREATED
          - ACTIVE
          - RUNNING
          - TERMINATED
      container_state:
        type: string
        enum:
        - AVAILABLE
        - ACTIVE
        - INACTIVE
        - TERMINATED
        - UNAVAILABLE
      id:
        type: integer
      host:
        type: string
      name:
        type: string
      pdb_id:
        type: string
      tag:
        type: string
      ports:
        type: List
      storage:
        type: Map
      username:
        type: string
      image:
        type: string
      cpu_shares:
        type: integer
      memory_swap:
        type: integer
      resource_id:
        type: integer
      memory:
        type: integer
      wallet_setting:
        type: '#/definitions/TenantWalletSettings'
      principal:
        type: '#/definitions/HostUser'
      external_application:
        type: '#/definitions/ExternalApplication'
      lifecycle_state:
        type: string
        enum:
          - AVAILABLE
          - RESERVED
          - UNAVAILABLE
      cluster_id:
        type: integer
  ResourceDeployment:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      external_application:
        type: '#/definitions/ExternalApplication'
      owner_type:
        type: string
        enum:
          - TENANT_DATABASE
      owner_id:
        type: string
      clusters:
        type: array
        items:
          $ref: '#/definitions/Cluster'
  TenantWalletSettings:
    type: object
    properties:
      wallet_password:
        type: string
      credential:
        type: '#/definitions/Credential'
  Credential:
    type: object
    properties:
      user:
        type: string
      password:
        type: string
  HostUser:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      alias:
        type: string
      password:
        type: string
      key:
        type: string
  Resource:
    type: object
    properties:
      type:
        type: string
      cpu_count:
        type: integer
      status:
        type: string
        enum:
          - ENABLED
          - DISABLED
          - UNAVAILABLE
          - HEALTHY
          - UNHEALTHY
      id:
        type: integer
      address:
        type: string
      name:
        type: string
      database_guid:
        type: string
      database_id:
        type: string
      tag:
        type: string
        minLength: 1
        maxLength: 32
  DataSetResult:
    type: object
    properties:
      items:
        type: array
        items:
          $ref: '#/definitions/ChartItem'
      hasMore:
        type: boolean
      limit:
        type: integer
        format: int32
      offset:
        type: integer
        format: int32
      count:
        type: integer
        format: int32
      links:
        type: array
        items:
          $ref: '#/definitions/ChartLinks'
  ORDSCentralConfiguration:
    type: object
    properties:
      settings:
        type: object
      links:
        type: array
        items:
          $ref: '#/definitions/ChartLinks'
  ORDSCentralURLMapping:
    type: object
    properties:
      mapping_rule:
        type:
          type: string
        value:
          type: string
      database:
        pool:
          type: object
          properties:
            name:
              type: string
            settings:
              type: object
      links:
        type: array
        items:
          $ref: '#/definitions/ChartLinks'
  ChartItem:
    type: object
    properties:
       data:
         type: string
  ChartLinks:
    type: object
    properties:
      rel:
        type: string
      href:
        type: string
  ExternalApplicationJobSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          name:
            type: string
          setting:
            type: string
          auth_config:
            type: string
          app_config:
            type: object
            items:
              $ref: '#/definitions/ExternalApplicationConfig'
  ExternalApplicationConfig:
    type: object
    properties:
      user:
        type: string
      private_key_secret:
        type: string
      scripts_directory:
        type: string
      streaming_directory:
        type: string
      recycle_interval_sec:
        type: integer
      rotation_interval_sec:
        type: integer
      healthcheck_interval_sec:
        type: integer
      usage_percentage_warning:
        type: integer
      max_lock_sec:
        type: integer
      release_usage_percentage:
        type: integer
      commands:
        type: object
        items:
          $ref: '#/definitions/ExternalApplicationCommands'
  ExternalApplicationCommands:
    type: object
    properties:
      install:
        type: object
        items:
          $ref: '#/definitions/ExternalApplicationOperation'
      start:
        type: object
        items:
          $ref: '#/definitions/ExternalApplicationOperation'
      stop:
        type: object
        items:
          $ref: '#/definitions/ExternalApplicationOperation'
  ExternalApplicationOperation:
    type: object
    properties:
      filename:
        type: string
      arguments:
        type: string
  ProvisionExternalApplicationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/ExternalApplicationJobSpecification'
      - type: object
        required:
          - name
          - setting
        properties:
          name:
            type: string
          setting:
            type: string
  UpdateExternalApplicationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/ExternalApplicationJobSpecification'
      - type: object
        required:
          - application_name
        properties:
          application_name:
            type: string
          ace_hosts:
            type: array
            description: Host being granted access
            items:
              $ref: '#/definitions/ACEHost'
  UnprovisionExternalApplicationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - application_name
        properties:
          application_name:
            type: string
  ScheduledBackupSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - is_full_backup
        properties:
          is_full_backup:
            type: boolean
  TagJobSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          - object_type
          - object_id
          - tag_key
          - tag_value
          - internal_tag_key
        properties:
          object_type:
            type: string
          object_id:
            type: string
          tag_key:
            type: string
          tag_value:
            type: string
          wildcard_object_id:
            type: boolean
          wildcard_tag_value:
            type: boolean
          internal_tag_key:
            type: string
  TagUpdateSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/TagJobSpecification'
      - type: object
        required:
          - tag_id
        properties:
          tag_id:
            type: integer
  DatabaseConnectString:
    type: object
    properties:
      name:
        type: string
        description: Name of the connection string.
      details:
        type: string
        description: Details of the connection string.
  AdditionalDetailsTemplate:
    type: object
    properties:
      pct_complete:
        type: string
        description: Template for percentage completion message
      eta:
        type: string
        description: Template for estimated time remaining message
      need_validation:
        type: array
        description: Template for validation message
        items:
          type: string
  TenantDatabaseAcl:
    type: object
    properties:
      ace_hosts:
        type: array
        description: Host being granted access
        items:
          $ref: '#/definitions/ACEHost'
      walletless:
        type: boolean
        description: Walletless option flag. True if pdb allows walletless connections.
  ACEHost:
    properties:
      ip:
        type: string
        description: ipv4 or ipv6 or cidr address
  ServiceLimit:
    type: object
    properties:
      service_id:
        type: integer
        format: int32
      cpu_total:
        type: integer
        format: int32
      storage_total_gb:
        type: integer
        format: int32
  TenantJobSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          tenant_name:
            type: string
          account_name:
            type: string
  DatabaseSelectSqlSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/ExecuteSqlSpecification'
      - type: object
        properties:
          tenant_name:
            type: string
          database_name:
            type: string
          selectSql:
            type: object
            items:
              $ref: '#/definitions/SelectSQL'
  SelectSQL:
    type: object
    properties:
      table_name:
        type: string
      columns:
        type: array
        items:
          type: string
      predicates:
        type: array
        items:
          type: string
  TenantUpdateSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/TenantJobSpecification'
      - type: object
        properties:
          tenant_key:
            type: string
          pod_type:
            type: string
          pod_id:
            type: integer
            format: int32
          disabled_capability:
            type: string
          new_tenant_name:
            type: string
          cloud_account_id:
            type: string
          service_limits:
            type: array
            items:
              $ref: '#/definitions/ServiceLimit'
  PluggableDatabase:
    type: object
    properties:
      name:
        type: string
      open_mode:
        type: string
      tenant_name:
        type: string
      service_type:
        type: string
      max_size_bytes:
        type: integer
        format: int64
      current_size_bytes:
        type: integer
        format: int64
      cpu_count_total:
        type: integer
        format: int32
      cpu_count_used:
        type: integer
        format: int32
  ContainerDatabase:
    type: object
    properties:
      num_pdbs:
        type: integer
        format: int32
      cpu_count_used:
        type: integer
        format: int32
      cpu_count_total:
        type: integer
        format: int32
      available_storage:
        type: integer
        format: int64
      available_rsrc_cpu_count:
        type: integer
        format: int64
      fra_space_limit:
        type: integer
        format: int64
      fra_space_reclaimable:
        type: integer
        format: int64
      fra_space_used:
        type: integer
        format: int64
      current_size_bytes:
        type: integer
        format: int64
      max_size_bytes:
        type: integer
        format: int64
      rsrc_cpu_count:
        type: integer
        format: int32
      name:
        type: string
      pdbs:
        type: array
        items:
          $ref: '#/definitions/PluggableDatabase'
  PodTopology:
    type: object
    properties:
      cdb:
        $ref: '#/definitions/ContainerDatabase'
  DatabaseConfiguration:
    type: object
    properties:
      service:
        type: string
      host:
        type: string
  JobLimit:
    type: object
    properties:
      job_type:
        type: string
        description: Type of Job (OPEN_TENANT_DATABASE,CLOSE_TENANT_DATABASE etc)
      job_limit:
        type: integer
        description: |
          Threshold values for different jobtypes on a pod:
            - All TENANT_DATABASE jobs ideally 60
            - POD_DATA_COLLECTION job ideally 60
            - HEALTHCHECK jobs ideally 1
      reconcile_job_percentage:
        type: integer
        description: |
         Sets reconcile percentage for the jobtype on the pod:
           - For all TENANT_DATABASE related jobs ideally 50
           - For other jobs ideally 0
      subdivided_job_percentage:
        type: integer
        description: |
          sets subdivided limits for the jobtype on the pod:
            - TENANT_DATABASE_EXTERNAL_APPLICATION job ideally 50
            - ACL_TENANT_DATABASE job ideally 100
            - OTHER TENANT_DATABASE related jobs 0
            - All other jobs ideally 100
      tenant_maintenance_job_percentage:
        type: integer
        description: |
          sets tenant maintenance job limit for the jobtype on the pod:
            -  Currently 0 for all jobtypes
      hanging_job_limit:
        type: integer
        description: |
          Sets the Hanging job limit for each Job type:
            - BACKUP_MAINTENANCE ideally 1
            - All other jobs ideally 10
      overlimit_delay_ms:
        type: integer
        description: overlimit delay in milisecond
      jobs_created_during_sec:
        type: integer
        description: value in second
      delay_sec:
        type: integer
        description: delay in second
      look_back_interval:
        type: integer
        description: interval in seconds
  MaintenanceWindow:
    type: object
    properties:
      start:
        type: string
        description: value must be of format "HH:mm"
      end:
        type: string
        description: value must be of format "HH:mm"
      day_of_week:
        type: string
        enum:
          - MONDAY
          - TUESDAY
          - WEDNESDAY
          - THURSDAY
          - FRIDAY
          - SATURDAY
          - SUNDAY
      zone_id:
        type: string
      frequency:
        type: string
        enum:
          - WEEKLY
          - BIWEEKLY
      start_date:
        type: string
        description: value must be of format "yyyy-MM-dd"
  NextMaintenance:
    type: object
    properties:
      start:
        type: string
        description: value must be of format "yyyy-MM-dd HH:mm"
      end:
        type: string
        description: value must be of format "yyyy-MM-dd HH:mm"
      zone_id:
        type: string
  Patch:
    type: object
    properties:
      id:
        type: string
        description: patch identifier
      name:
        type: string
        description: patch name
      type:
        type: string
        description: patch type
      pod_id:
        type: integer
        description: the id of the pod to which the pod is applied
      planned:
        type: boolean
        description: true if the applied patch follows maintenance schedule
      created:
        type: integer
        format: int64
        description: the epoch time that the patch is initiated
      updated:
        type: integer
        format: int64
        description: the epoch time that the patch metadata are last modified
      finished:
        type: integer
        format: int64
        description: the epoch time that the patch has completed
      status:
        type: string
        enum: [ABORTED, FAILURE, STARTED, SUCCESS]
  Pod:
    type: object
    properties:
      id:
        type: integer
        format: int32
      healthy:
        type: boolean
      enabled:
        type: boolean
      disabled:
        type: boolean
      statusCode:
        type: integer
        format: int32
      database_config:
        $ref: '#/definitions/DatabaseConfiguration'
      topology:
        $ref: '#/definitions/PodTopology'
      type_id:
        type: integer
        format: int32
      service_version:
        type: string
      database_version:
        type: string
      free_tier:
        type: boolean
      maintenance_window:
        $ref: '#/definitions/MaintenanceWindow'
      next_maintenance:
        $ref: '#/definitions/NextMaintenance'
      maintenance_schedule_type:
        type: string
        enum: [EARLY, REGULAR]
        default: REGULAR
        description: maintenance schedule type of the pod
      job_limits:
        type: array
        description: Pod jobs with their types and corresponding limits
        items:
          $ref: '#/definitions/JobLimit'
      thread_to_cpu_ratio:
        type: float
  CloudLoggerDetails:
    type: object
    properties:
      time:
        type: string
      text:
        type: string
      section:
        type: string
      level:
        type: string
      user:
        type: string
      reqId:
        type: string
  CloudLogger:
    type: object
    properties:
      status:
        type: string
      code:
        type: string
      retry:
        type: boolean
      message:
        type: string
      details:
        type: array
        items:
          $ref: '#/definitions/CloudLoggerDetails'
      result:
        type: string
  TenantExternalApplicationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          tenant_name:
            type: string
          app_name:
            type: string
          enabled:
            type: boolean
  UpdateTenantDatabaseExternalApplicationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          tenant_name:
            type: string
          database_name:
            type: string
          app_name:
            type: string
          enabled:
            type: boolean
          update_proxy_user_passwd:
            type: boolean
          install:
            type: boolean
          uninstall:
            type: boolean
          update:
            type: boolean
          settings:
            type: string
  PreviewMetadata:
    type: object
    properties:
      preview:
        type: boolean
      preview_start_date:
        type: string
      preview_end_date:
        type: string
      terminate_on_preview_end:
        type: boolean
      notification_email_id:
        type: string
  PodType:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      central:
        type: boolean
  DatabaseVersion:
    type: object
    properties:
      database_version:
        type: string
      documentation_link:
        type: string
      free_tier:
        type: boolean
      paid_tier:
        type: boolean
      upgrade_target_versions:
        type: array
        items:
          type: string
      default_for_free:
        type: boolean
      default_for_paid:
        type: boolean
  FreeDatabaseAvailability:
    properties:
      available:
        type: boolean
        description: indicates whether capacity available for free instances

  JobType:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      external:
        type: boolean

  WorkRequest:
    type: object
    properties:
      status:
        type: string
        enum: [ACCEPTED, INPROGRESS, COMPLETE, FAILED]
      log_messages:
        type: array
        description: job inprogress or success messages
        items:
          $ref: '#/definitions/WorkRequestLogMessage'
      error_messages:
        type: array
        description: job failure message
        items:
          $ref: '#/definitions/WorkRequestErrorMessage'
      pct_complete:
        type: integer
        format: int32
  WorkRequestLogMessage:
    type: object
    properties:
      message:
        type: string
      timestamp:
        type: string
        description: message timestamp in the UTC timezone
  WorkRequestErrorMessage:
    type: object
    allOf:
    - $ref: '#/definitions/WorkRequestLogMessage'
    - type: object
      properties:
        error_code:
          type: string

  TenantState:
    type: object
    properties:
      state:
        type: string
        enum:
          - PROMO
          - PAID
          - FREE_TIER
          - DELETING

  PrivateEndpoint:
    type: object
    properties:
      ip:
        type: string
        description: private endpoint ip
      fqdn:
        type: string
        description: PE fqdn created by joining dns prefix and base domain
      nsg_ids:
        type: array
        description: List of network security group ocid
        items:
          type: string
  TransitionRoleTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          switchover:
            description: to indicate that switchover should happen with no-data-loss
            required: false
            type: boolean
            default: false
          failover:
            description: to indicate that minimum RTO need to be achieved
            required: false
            type: boolean
            default: false
          automatic_failover:
            description: to indicate that switchover initiated internally by broker with no-data-loss
            required: false
            type: boolean
            default: false
          relocate:
            description: to indicate that role transition is called to relocate the primary. Data Guard is disbaled at end of this role transition.
            type: boolean
            default: false
  CreateWalletSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          wallet_passwd:
            type: string
          ext_app_name:
            type: string
  DisabledCapability:
    type: object
    properties:
      value:
        type: string
        description: disabled capability value
      hidden:
        type: boolean
        description: Indicates whether disabled capability is hidden
  ResourceContainerOperationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          tenant_name:
            type: string
          database_name:
            type: string
          resource_address:
            type: string
          resource_type:
            type: string
          cpu:
            type: integer
            format: int32
          memory:
            type: integer
            format: int32
          tag:
            type: string
          ext_app_name:
            type: string
          container_name:
            type: string
          cpu_shares:
            type: integer
            format: int32
          memory_swap:
            type: integer
            format: int32
          cluster_id:
            type: integer
            format: int32
          cpu_usage:
            type: float
  ProvisionResourceDeploymentSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          name:
            type: string
          tenant_name:
            type: string
          database_name:
            type: string
          external_application_name:
            type: string
          clusters:
            type: array
            items:
              $ref: '#/definitions/Cluster'
  ResourceOperationSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          resource_type:
            type: string
          resource_operation:
            type: string
          resource_address:
            type: string
  ExternalApplicationAclAccessCheckSpecification:
    type: object
    properties:
      hostname:
        type: string
        description: hostname
      tenant_name:
        type: string
        description: tenant name
      database_name:
        type: string
        description: database name
      x_vcn_id:
        type: string
        description: vcn id
      x_vcn_ocid:
        type: string
        description: vcn oci id
      x_real_ip:
        type: string
        description: x real ip header
      x_forwarded_for:
        type: string
        description: x forwarded header. Value can be separated by comma.

  ExternalApplicationAclAccessCheckResponse:
    type: object
    properties:
      acl:
        type: boolean
        description: check acl result
      empty_explicit_acls:
        type: boolean
        description: indicates, if explicit acls is added
      empty_explicit_ace_hosts:
        type: boolean
        description: indicates, if explicit ip acls is added
      empty_explicit_vcn_acls:
        type: boolean
        description: indicates, if explicit vcn acls is added
      pe_attached:
        type: boolean
        description: indicates, if pe is attached
      tenant_name:
        type: string
        description: tenant name
      database_name:
        type: string
        description: database name
      rate_limit:
        type: integer
        format: int32
        description: allowed no.of.requests for pdb to control rate
  TenantDatabaseDisabledCapabilitySpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          database_name:
            type: string
            required: true
          operation_name:
            type: string
          disabled_capabilities:
            type: array
            items:
              type: string
              enum:
                - PROVISION_TENANT
                - UNPROVISION_TENANT
                - PROVISION_TENANT_DATABASE
                - UNPROVISION_TENANT_DATABASE
                - RELOCATE_TENANT_DATABASE
                - RESIZE_TENANT_DATABASE
                - OPEN_TENANT_DATABASE
                - CLOSE_TENANT_DATABASE
                - REOPEN_TENANT_DATABASE
                - BACKUP_TENANT_DATABASE
                - RESTORE_TENANT_DATABASE
                - RENAME_TENANT_DATABASE
                - GET_TENANT_DATABASE_BACKUP
                - CHANGE_ADMIN_PASSWD
                - CHANGE_PASSWD
                - UPDATE_TENANT
                - VALIDATE_DATABASE_BACKUP_PREREQ
                - CLONE_TENANT_DATABASE
                - REFRESH_TENANT_DATABASE
                - UPDATE_TENANT_DATABASE
                - TRANSITION_ROLE_TENANT_DATABASE
                - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
          allDisabledCapabilties:
            type: boolean
  TenantDisabledCapabilitySpecification:
    type: object
    allOf:
      - $ref: '#/definitions/TenantJobSpecification'
      - type: object
        properties:
          operation_name:
            type: string
          disabled_capabilities:
            type: array
            items:
              type: string
              enum:
                - PROVISION_TENANT
                - UNPROVISION_TENANT
                - PROVISION_TENANT_DATABASE
                - UNPROVISION_TENANT_DATABASE
                - RELOCATE_TENANT_DATABASE
                - RESIZE_TENANT_DATABASE
                - OPEN_TENANT_DATABASE
                - CLOSE_TENANT_DATABASE
                - REOPEN_TENANT_DATABASE
                - BACKUP_TENANT_DATABASE
                - RESTORE_TENANT_DATABASE
                - RENAME_TENANT_DATABASE
                - GET_TENANT_DATABASE_BACKUP
                - CHANGE_ADMIN_PASSWD
                - CHANGE_PASSWD
                - UPDATE_TENANT
                - VALIDATE_DATABASE_BACKUP_PREREQ
                - CLONE_TENANT_DATABASE
                - REFRESH_TENANT_DATABASE
                - UPDATE_TENANT_DATABASE
                - TRANSITION_ROLE_TENANT_DATABASE
                - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
          allDisabledCapabilties:
            type: boolean
  PodDisabledCapabilitySpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          operation_name:
            type: string
          disabled_capabilities:
            type: array
            items:
              type: string
              enum:
                - PROVISION_TENANT
                - UNPROVISION_TENANT
                - PROVISION_TENANT_DATABASE
                - UNPROVISION_TENANT_DATABASE
                - RELOCATE_TENANT_DATABASE
                - RESIZE_TENANT_DATABASE
                - OPEN_TENANT_DATABASE
                - CLOSE_TENANT_DATABASE
                - REOPEN_TENANT_DATABASE
                - BACKUP_TENANT_DATABASE
                - RESTORE_TENANT_DATABASE
                - RENAME_TENANT_DATABASE
                - GET_TENANT_DATABASE_BACKUP
                - CHANGE_ADMIN_PASSWD
                - CHANGE_PASSWD
                - UPDATE_TENANT
                - VALIDATE_DATABASE_BACKUP_PREREQ
                - CLONE_TENANT_DATABASE
                - REFRESH_TENANT_DATABASE
                - UPDATE_TENANT_DATABASE
                - TRANSITION_ROLE_TENANT_DATABASE
                - UPDATE_TENANT_DATABASE_PRIVATE_ENDPOINT
          allDisabledCapabilties:
            type: boolean
  ExternalApplicationAttribute:
    type: object
    properties:
      version:
        type: string
      page_link_detail:
        type: string
  EncryptionKey:
    type: object
    properties:
      kms_key:
        description: Co-ordinates of the KMS key
        $ref: '#/definitions/KmsKey'
      activation_time:
        type: integer
        format: int64
        description: Activation time of KMS key
      key_type:
        type: string
        enum:
          - CUSTOMER_MANAGED_KEY
          - ORACLE_MANAGED_KEY
        description: Key type
      current:
        type: boolean
        description: Indicates if this is the key currently used
  KmsKey:
    type: object
    properties:
      crypto_endpoint:
        type: string
        description: Crypto URL of KMS
      master_key_id:
        type: string
        description: OCID of KMS key
      vault_id:
        type: string
        description: OCID of KMS vault
      key_type:
        type: string
        enum:
          - CUSTOMER_MANAGED_KEY
          - ORACLE_MANAGED_KEY
        description: Key type
  PdbCredential:
    type: object
    properties:
      username:
        type: string
        description: username of the pdb
      password:
        type: string
        description: password of the username
  PeerDatabase:
    type: object
    properties:
      name:
        type: string
        description: database_name of the PEER Database
      region_code:
        type: string
        description: region code where PEER Database is present
      lifecycle_state:
        type: string
        enum:
          - PROVISIONING
          - AVAILABLE
          - TERMINATING
          - TERMINATED
          - UNAVAILABLE
          - ROLE_CHANGE_IN_PROGRESS
      role_changed:
        type: integer
        format: int64
        description: indicates when last role_change happened
      adg_role:
        type: string
        enum:
          - PRIMARY
          - STANDBY
      created:
        type: integer
        format: int64
        description: indicates when PEER Database created
      ccdb_dbId:
        type: string
        description: Unique DB ID in CCDB for PEER Database
      cloud_database_name:
        type: string
        description: cloudDatabaseName of the Peer Database
      tenant_id:
        type: string
        description: Unique internal TenantID of the Tenancy.
      connect_strings:
        description: connect strings of the PEER Database
        type: array
        items:
          type: string
      clone_type:
        type: string
        description: indicates type of the clone, EA or CrossRegionADG etc
      max_size:
        type: integer
        format: int32
        description: max_size of the PEER Database
      cpu_count:
        type: integer
        format: int32
        description: cpu_count of the PEER Database
      wallet_key:
        type: string
        description: wallet_key of the PEER Database
      md5_hash:
        type: string
        description: hash of the TenantDatabase object uploaded to object storage
      peer_pod:
        $ref: '#/definitions/PeerPod'
  PeerPod:
    type: object
    properties:
      cloud_provider:
        type: string
        description: refers to cloud provider of the pod
      region_code:
        type: string
        description: refers to region code of the pod
      pod_name:
        type: string
        description: name of the Pod on which this database is present
  AuxiliaryRegion:
    type: object
    properties:
      cloud_provider:
        type: string
        description: cloud provider of auxiliary region
      code:
        type: string
        description: region code of auxiliary region
  RegionObjectStorage:
    type: object
    properties:
      end_point:
        type: string
        description: URI of object storage without bucket name
      credential_object_name:
        type: string
        description: credential object name that stores the credentials of object storage
  PushPartialArchiveLogSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          from_time_str:
            type: string
            description: push logs since this time. should be in "YYYY-MM-DDThh:mm:ssZ" format
          auxiliary_cloud_provider:
            type: string
            description: optionally a user can supply the auxiliary cloud provider from sync
          auxiliary_region_code:
            type: string
            description: optionally a user can supply the auxiliary region code from sync
  LocalPartialArchiveLogSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        required:
          -operation
        properties:
          operation:
            type: string
            description: |
              GENERATE (Generates PartialArchive Logs)
              SET (sets Log archive Destination)
              Clear (Clear log archive destination)
            enum:
              - GENERATE
              - SET
              - CLEAR
          debug:
            type: string
            description: turns on debug flag on POD
          savelog:
            type: boolean
            description: saves logfile on POD file system
          transition:
            type: boolean
            description: true if called for transition
          from_time_str:
            type: string
            description: push logs since this time. should be in "YYYY-MM-DDThh:mm:ssZ" format
          auxiliary_cloud_provider:
            type: string
            description: optionally a user can supply the auxiliary cloud provider from sync
          auxiliary_region_code:
            type: string
            description: optionally a user can supply the auxiliary region code from sync
  PullPartialArchiveLogSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          pod_name:
            type: string
            required: true
            description: refers to remote pod name of partial archivelog to pull
          cloud_provider:
            type: string
            required: true
            description: refers to cloud provider of the pod to sync
          region_code:
            type: string
            required: true
            description: refers to region code of the pod to sync
          from_time_str:
            type: string
            description: pull logs since this time. should be in "YYYY-MM-DDThh:mm:ssZ" format
          auxiliary_cloud_provider:
            type: string
            description: optionally a user can supply the auxiliary cloud provider from sync
          auxiliary_region_code:
            type: string
            description: optionally a user can supply the auxiliary region code from sync
  TenantDatabaseResourceType:
    type: object
    properties:
      tenant_id:
        type: string
      database_id:
        type: string
      cpu_billing_ratio:
        type: float
      cpu_alloc_multiplier:
        type: int32
      tenant_container_limit:
        type: int32
      resource_type_id:
        type: int32
  ResourceType:
    type: object
    properties:
      id:
        type: int32
      name:
        type: string
      external_application_id:
        type: int32
      key:
        type: string
      scripts_directory:
        type: string
      logs_directory:
        type: string
      wallet_directory:
        type: string
      autoscalable:
        type: boolean
      rotatable:
        type: boolean
      cpu_billing_ratio:
        type: float
      cpu_alloc_multiplier:
        type: int32
      tenant_container_limit:
        type: int32
      resource_type_id:
        type: int32
      metrics:
        $ref: '#/definitions/ResourceTypeMetrics'
  ResourceTypeMetrics:
    type: object
    properties:
      metric_name_for_billing:
        type: string
  ResourceTypeCommand:
    type: object
    properties:
      id:
        type: int32
      name:
        type: string
      operation:
        type: string
        enum:
          - START
          - INSTALL
          - STOP
          - GET_USAGE
          - GET_STATUS
          - GET_LOGS
          - CHECK_ROTATE
      filename:
        type: string
      arguments:
        type: string
      user:
        type: string
  ResourceDatabaseSqlOperation:
    type: object
    properties:
      id:
        type: int32
      name:
        type: string
      jobType:
        $ref: '#/definitions/Job.Type'
      source_sql:
        type: string
      operation:
        type: string
        enum:
          - PROVISION_RESOURCE_DEPLOYMENT
          - RESERVE_RESOURCE_CONTAINER
  RestorePlan:
    type: object
    properties:
      end_point:
        type: string
      cloud_provider:
        type: string
        description: refers to cloud provider of the end point
      region_code:
        type: string
        description: refers to region code of the end point
  BackupToPodBucketTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          incremental:
            type: boolean
            description: indicates to take a incremental backup
            required: false
  BackupForCloneTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          for_clone:
            type: boolean
            description: indicates to create a backup for cloning purpose
  ComposedBackupTenantDatabaseSpecification:
    type: object
    allOf:
      - $ref: '#/definitions/JobSpecification'
      - type: object
        properties:
          incremental:
            type: boolean
            description: indicates to take a incremental backup
            required: false
          to_pod_bucket:
            type: boolean
            description: indicates to send backups to oracle owned bucket
            required: false
          for_clone:
            type: boolean
            description: indicates to create a backup for cloning purpose
  Region:
    type: object
    properties:
      name:
        type: string
        description: globally unique name
      cloud_provider:
        type: string
        description: cloud provider - OCI/AWS
      public_region_name:
        type: string
        description: specific region like us-east-1
      realm:
        type: string
        desription: specific to OCI - OC2 realm
      code:
        description: region code
        type: string
      internal_name:
        description: internal region name like R1
        type: tring internal_name
      public_domain_name:
        description: public domain name
        type: string
      public_domain_name_pod:
        description: Used to connect to cdb$root of a Pod directly ( used in cross region cloning
        type: string
      private_lb_ip:
        description: private lb ip for cross region broker communication
        type: string
      public_lb_ip:
        description: public lb ip
        type: string
      enabled:
        description: is this region enabled
        type: boolean
      external:
        description: is this region external (visible to dbaas)
        type: boolean
      local:
        description: is this entry for current region
        type: boolean
      created:
        type: integer
        format: int64
      updated:
        type: integer
        format: int64
      deleted:
        type: integer
        format: int64
      clone_peer_regions:
        description: buddy regions for cross region clones
        type: string
      cloud_system_primary_region_name:
        description: globally unique name of the primary region, itself if primary is self
        type: string
      cloud_system_peers:
        description: array of globally unique names of peer regions
        type: array
        items:
          type: string
      cloud_identifier:
        description: Opaque identifier for dbaas
        $ref: '#/definitions/CloudIdentifier'
  CloudIdentifier:
    type: object
    properties:
      cloud_provider:
        description: oci/aws/azure/google
        type: string
      public_region_name:
        description: datacenter/region like us-east-1 or phx
        type: string
